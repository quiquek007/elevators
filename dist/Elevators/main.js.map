{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/constants/camera-settings.constants.ts","./src/app/constants/elevator-manager-settings.constants.ts","./src/app/constants/general-settings.constants.ts","./src/app/constants/project.constants.ts","./src/app/constants/settings-panel.constants.ts","./src/app/engine/engine.component.ts","./src/app/engine/engine.component.html","./src/app/redux/camera-settings/camera-settings.actions.ts","./src/app/redux/camera-settings/camera-settings.reducer.ts","./src/app/redux/default-state.provider.ts","./src/app/redux/elevator-manager-settings/elevator-manager-settings.actions.ts","./src/app/redux/elevator-manager-settings/elevator-manager-settings.reducer.ts","./src/app/redux/general-settings/general-settings.actions.ts","./src/app/redux/general-settings/general-settings.reducer.ts","./src/app/redux/root-reducer.ts","./src/app/redux/settings-panel/settings-panel.actions.ts","./src/app/redux/settings-panel/settings-panel.reducer.ts","./src/app/resouces/attention-sign/attention-sign.component.ts","./src/app/resouces/attention-sign/attention-sign.component.html","./src/app/services/elevator-animation-manager.service.ts","./src/app/services/engine.service.ts","./src/app/services/font-provider.service.ts","./src/app/services/object-manager.service.ts","./src/app/settings-panel/animation-player/animation-player.component.ts","./src/app/settings-panel/animation-player/animation-player.component.html","./src/app/settings-panel/elevators-manager/elevators-manager.component.ts","./src/app/settings-panel/elevators-manager/elevators-manager.component.html","./src/app/settings-panel/elevators-manager/reset-keys.model.ts","./src/app/settings-panel/elevators-manager/wireframes-settings/wireframes-settings.component.ts","./src/app/settings-panel/elevators-manager/wireframes-settings/wireframes-settings.component.html","./src/app/settings-panel/general-settings/controls-settings/controls-settings.component.ts","./src/app/settings-panel/general-settings/controls-settings/controls-settings.component.html","./src/app/settings-panel/general-settings/general-settings.component.ts","./src/app/settings-panel/general-settings/general-settings.component.html","./src/app/settings-panel/general-settings/grid-settings/grid-settings.component.ts","./src/app/settings-panel/general-settings/grid-settings/grid-settings.component.html","./src/app/settings-panel/general-settings/renderer-settings/renderer-settings.component.ts","./src/app/settings-panel/general-settings/renderer-settings/renderer-settings.component.html","./src/app/settings-panel/passengers-manager/passengers-manager.component.ts","./src/app/settings-panel/passengers-manager/passengers-manager.component.html","./src/app/settings-panel/settings-panel.component.ts","./src/app/settings-panel/settings-panel.component.html","./src/app/settings-panel/smart-dumb-manager/smart-dumb-manager.component.ts","./src/app/settings-panel/smart-dumb-manager/smart-dumb-manager.component.html","./src/app/shared/classes/elevator.class.ts","./src/app/shared/classes/floor.class.ts","./src/app/shared/classes/passenger.class.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, ChangeDetectionStrategy, OnInit, OnDestroy, HostListener } from '@angular/core';\r\nimport { DrawerItem, DrawerSelectEvent } from '@progress/kendo-angular-layout';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppState } from './redux/root-interface';\r\nimport SettingsPanelActions from './redux/settings-panel/settings-panel.actions';\r\nimport { localStorageProject } from './constants/project.constants';\r\nimport GeneralSettingsActions from 'app/redux/general-settings/general-settings.actions';\r\nimport CameraSettingsActions from 'app/redux/camera-settings/camera-settings.actions';\r\nimport { EngineService } from 'app/services/engine.service';\r\nimport { CameraSettings } from 'app/redux/camera-settings/camera-settings.model';\r\nimport cameraSettings from 'app/constants/camera-settings.constants';\r\nimport ElevatorManagerSettingsActions from './redux/elevator-manager-settings/elevator-manager-settings.actions';\r\nimport { ObjectManagerService } from './services/object-manager.service';\r\nimport Elevator from './shared/classes/elevator.class';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.less'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n    private subscriptions: Subscription[] = [];\r\n    private plainStore: AppState;\r\n    private cameraSettings: CameraSettings = { ...cameraSettings };\r\n    private allElevators: Elevator[];\r\n\r\n    public contentExpanded: boolean = false;\r\n    public panelOnRightSide: boolean = false;\r\n    public selectedTab: string;\r\n    public items: Array<DrawerItem> = [\r\n        {\r\n            text: 'ElevatorsManager',\r\n            icon: 'k-i-plus-outline'\r\n        },\r\n        {\r\n            text: 'Passangers',\r\n            icon: 'k-i-myspace-box'\r\n        },\r\n        {\r\n            text: 'GlobalSettings',\r\n            icon: 'k-i-gear',\r\n            selected: true\r\n        },\r\n        {\r\n            text: 'SmartDumbManager',\r\n            icon: 'k-i-hyperlink'\r\n        },\r\n        {\r\n            text: 'Favourites',\r\n            icon: 'k-i-star-outline'\r\n        }\r\n        // {\r\n        //     separator: true\r\n        // },\r\n        // {\r\n        //     text: 'Reset All',\r\n        //     icon: 'k-i-reload'\r\n        // }\r\n    ];\r\n\r\n    @HostListener('window:beforeunload', ['$event'])\r\n    public canDeactivate(event: any) {\r\n        localStorage.setItem(localStorageProject, JSON.stringify(this.plainStore));\r\n    }\r\n\r\n    constructor(private store: Store<AppState>, private engServ: EngineService, private objectManager: ObjectManagerService) {}\r\n\r\n    public ngOnInit(): void {\r\n        this.subscriptions.push(\r\n            this.store.select(state => state).subscribe(x => this.plainStore = x),\r\n            this.store.select(state => state.settingsPanel.formPosition).subscribe(position => this.panelOnRightSide = position === 'right'),\r\n            this.store.select(state => state.settingsPanel.formOpened).subscribe(formOpened => this.contentExpanded = formOpened),\r\n            this.store\r\n                .select(state => state.settingsPanel.selectedTab)\r\n                .subscribe(selectedTab => {\r\n                    this.selectedTab = selectedTab;\r\n                    this.items.forEach(item => item.selected = false);\r\n                    this.items.find(({ text }) => text === selectedTab).selected = true;\r\n                }),\r\n            this.store\r\n                .select(state => state.cameraSettings.cameraPosition)\r\n                .subscribe(cameraPosition => this.cameraSettings.cameraPosition = cameraPosition),\r\n            this.store\r\n                .select(state => state.cameraSettings.controlsTarget)\r\n                .subscribe(controlsTarget => this.cameraSettings.controlsTarget = controlsTarget),\r\n            this.store.select(state => state.elevatorManagerSettings.elevators).subscribe(elevators => this.allElevators = elevators)\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public getTooltipPosition(): string {\r\n        return this.panelOnRightSide ? 'left' : 'right';\r\n    }\r\n\r\n    public onSelect(ev: DrawerSelectEvent): void {\r\n        this.items.forEach(item => item.selected = false);\r\n        this.items.find(({ text }) => text === ev.item.text).selected = true;\r\n        this.store.dispatch(new SettingsPanelActions.SetSelectedTab(ev.item.text));\r\n    }\r\n\r\n    public onHideContent(): void {\r\n        this.store.dispatch(new SettingsPanelActions.SetPanelOpened(!this.contentExpanded));\r\n    }\r\n\r\n    public changeContolPanelSide(): void {\r\n        this.store.dispatch(new SettingsPanelActions.SetPanelPosition(this.getTooltipPosition()));\r\n    }\r\n\r\n    public onResetAllSettings(): void {\r\n        this.allElevators.forEach(elevator => this.objectManager.removeObject(this.objectManager.getObjectById(elevator.id)));\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.ResetAllSettings());\r\n\r\n        this.store.dispatch(new GeneralSettingsActions.ResetAllSettings());\r\n\r\n        this.store.dispatch(new CameraSettingsActions.ResetCameraPosition());\r\n        this.store.dispatch(new CameraSettingsActions.ResetControlsTarget());\r\n        this.engServ.setInitialCameraPosition(this.cameraSettings);\r\n    }\r\n}\r\n","<!-- canvas three.js -->\r\n<app-engine></app-engine>\r\n\r\n<kendo-drawer-container [ngClass]=\"{'right-side': panelOnRightSide}\">\r\n    <!-- mini buttons of control panel -->\r\n    <kendo-drawer #miniPanel\r\n        [position]=\"getTooltipPosition()\"\r\n        [items]=\"items\"\r\n        [mode]=\"'push'\"\r\n        [mini]=\"true\"\r\n        [autoCollapse]=\"true\"\r\n        (select)=\"onSelect($event)\">\r\n        <ng-template kendoDrawerFooterTemplate>\r\n            <button kendoButton\r\n                kendoTooltip\r\n                title=\"Reset all settings\"\r\n                class=\"reset-button\"\r\n                iconClass=\"k-icon k-i-reload\"\r\n                [position]=\"getTooltipPosition()\"\r\n                (click)=\"onResetAllSettings()\">\r\n            </button>\r\n          </ng-template>\r\n    </kendo-drawer>\r\n\r\n    <!-- content of control panel -->\r\n    <kendo-drawer-content *ngIf=\"contentExpanded\">\r\n        <settings-panel [selectedOption]=\"selectedTab\"></settings-panel>\r\n    </kendo-drawer-content>\r\n\r\n    <!-- buttons which manage state of control panel -->\r\n    <div kendoTooltip\r\n        class=\"form-controllers\"\r\n        [position]=\"getTooltipPosition()\">\r\n        <button title=\"Panel side\"\r\n            class=\"k-button\"\r\n            (click)=\"changeContolPanelSide()\">\r\n            <span [ngClass]=\"{'k-flip-h': panelOnRightSide}\"\r\n                class=\"k-icon k-i-indent-increase\">\r\n            </span>\r\n        </button>\r\n        <button title=\"Toggle content\"\r\n            class=\"k-button\"\r\n            (click)=\"onHideContent()\">\r\n            <span [ngClass]=\"{\r\n                'k-flip-h': (contentExpanded && !panelOnRightSide) || (!contentExpanded && panelOnRightSide)}\"\r\n                class=\"k-icon k-i-logout\">\r\n            </span>\r\n        </button>\r\n    </div>\r\n\r\n    <div [ngClass]=\"{'opposite-side': panelOnRightSide, 'opposite-side--right-side': !panelOnRightSide }\">\r\n        <animation-player></animation-player>\r\n    </div>\r\n</kendo-drawer-container>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ButtonsModule } from '@progress/kendo-angular-buttons';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { LayoutModule } from '@progress/kendo-angular-layout';\r\nimport { TooltipModule } from '@progress/kendo-angular-tooltip';\r\nimport { InputsModule } from '@progress/kendo-angular-inputs';\r\nimport { ListBoxModule } from '@progress/kendo-angular-listbox';\r\n\r\nimport { SettingsPanelComponent } from './settings-panel/settings-panel.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { EngineComponent } from './engine/engine.component';\r\nimport { ObjectManagerService } from './services/object-manager.service';\r\nimport { rootReducer } from './redux/root-reducer';\r\nimport { GeneralSettingsComponent } from './settings-panel/general-settings/general-settings.component';\r\nimport { GridSettingsComponent } from './settings-panel/general-settings/grid-settings/grid-settings.component';\r\nimport { RendererSettingsComponent } from './settings-panel/general-settings/renderer-settings/renderer-settings.component';\r\nimport { AttentionSignComponent } from './resouces/attention-sign/attention-sign.component';\r\nimport { ControlsSettingsComponent } from './settings-panel/general-settings/controls-settings/controls-settings.component';\r\nimport { ElevatorsManagerComponent } from './settings-panel/elevators-manager/elevators-manager.component';\r\nimport { WireframesSettingsComponent } from './settings-panel/elevators-manager/wireframes-settings/wireframes-settings.component';\r\nimport { PassengersManagerComponent } from './settings-panel/passengers-manager/passengers-manager.component';\r\nimport { SmartDumbManagerComponent } from './settings-panel/smart-dumb-manager/smart-dumb-manager.component';\r\nimport { AnimationPlayerComponent } from './settings-panel/animation-player/animation-player.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n\r\n        EngineComponent,\r\n\r\n        SettingsPanelComponent,\r\n        GeneralSettingsComponent,\r\n        GridSettingsComponent,\r\n        RendererSettingsComponent,\r\n        ControlsSettingsComponent,\r\n        PassengersManagerComponent,\r\n        SmartDumbManagerComponent,\r\n        AnimationPlayerComponent,\r\n\r\n        ElevatorsManagerComponent,\r\n        WireframesSettingsComponent,\r\n\r\n        AttentionSignComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        ButtonsModule,\r\n        BrowserAnimationsModule,\r\n        LayoutModule,\r\n        TooltipModule,\r\n        InputsModule,\r\n        ListBoxModule,\r\n        FormsModule,\r\n        StoreModule.forRoot(rootReducer)\r\n    ],\r\n    exports: [],\r\n    providers: [ObjectManagerService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","const cameraSettings = {\r\n    key: 'cameraSettings',\r\n    cameraPosition: { x: 100, y: 0, z: 0 },\r\n    controlsTarget: { x: 0, y: 0, z: 0 },\r\n}\r\n\r\nexport default cameraSettings;","const elevatorManagerSettings = {\r\n    key: 'elevatorManagerSettings',\r\n    elevators: [],\r\n    selectedElevator: null,\r\n    distanceBetweenElevators: 25,\r\n\r\n    defaultElevator: {\r\n        wallColor: '#75c6c6',\r\n        wallOpacity: 1,\r\n        wallTransparent: false,\r\n        length: 10,\r\n        width: 10,\r\n        height: 15,\r\n        capacity: 10,\r\n        speed: 0.2,\r\n        coveredFloors: 2,\r\n        currentFloor: 0,\r\n        floorHeight: 25,\r\n        floorColor: 'gray',\r\n        floorColorArrived: 'lightgreen',\r\n        floorTextArrived: 'black',\r\n        floorText: 'white',\r\n        floorOpacity: 0.8,\r\n        floorLength: 25,\r\n        floorWidth: 25\r\n    },\r\n\r\n    animationTime: {\r\n        doorOpenClose: 1,\r\n        startEndSmooth: 0.25,\r\n        linear: 0.5\r\n    },\r\n\r\n    wireframes: {\r\n        wireframesSettingsExpanded: false,\r\n        isWireframesShowed: true,\r\n        color: '#fff'\r\n    }\r\n};\r\n\r\nexport default elevatorManagerSettings;\r\n","const generalSettings = {\r\n    key: 'generalSettings',\r\n    backgroundColor: 'rgb(64, 64, 64)',\r\n\r\n    grid: {\r\n        gridColor: 'gray',\r\n        gridEnable: true,\r\n        gridSettingsExpanded: false,\r\n        gridOpacity: 0.2,\r\n        gridSize: {\r\n            size: 200,\r\n            division: 40\r\n        },\r\n    },\r\n\r\n    renderer: {\r\n        rendererSettingsExpanded: false,\r\n        rendererAlpha: true,\r\n        rendererAntialias: true,\r\n    },\r\n\r\n    controls: {\r\n        controlsSettingsExpanded: false,\r\n        enableDamping: true,\r\n        dampingFactor: 0.15,\r\n        cameraMinDistance: 100,\r\n        cameraMaxDistance: 1000,\r\n    }\r\n}\r\n\r\nexport default generalSettings;","const localStorageProject: string = 'elevatorsProject';\r\n\r\nexport { localStorageProject }","const settingsPanel = {\r\n    key: 'settingsPanel',\r\n    formPosition: 'left',\r\n    formOpened: false,\r\n    selectedTab: 'GlobalSettings'\r\n}\r\n\r\nexport default settingsPanel;","import * as THREE from 'three';\r\nimport { filter, take } from 'rxjs/operators';\r\nimport { Subscription, combineLatest, fromEvent } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { Component, ElementRef, ViewChild, OnInit, OnDestroy } from '@angular/core';\r\nimport { AppState } from '../redux/root-interface';\r\nimport GridUpdateSettings from './engine.interfaces';\r\nimport Elevator from '../shared/classes/elevator.class';\r\nimport { EngineService } from '../services/engine.service';\r\nimport cameraSettings from 'app/constants/camera-settings.constants';\r\nimport { ObjectManagerService } from '../services/object-manager.service';\r\nimport { CameraSettings } from 'app/redux/camera-settings/camera-settings.model';\r\nimport ElevatorManagerSettingsActions from 'app/redux/elevator-manager-settings/elevator-manager-settings.actions';\r\nimport { FontProviderService } from 'app/services/font-provider.service';\r\nimport elevatorManagerSettings from 'app/constants/elevator-manager-settings.constants';\r\n\r\n@Component({\r\n    selector: 'app-engine',\r\n    templateUrl: './engine.component.html',\r\n    styleUrls: ['./engine.component.less']\r\n})\r\nexport class EngineComponent implements OnInit, OnDestroy {\r\n    private subscriptions: Subscription[] = [];\r\n    private grid: THREE.GridHelper = null;\r\n    private rendererAlpha: boolean;\r\n    private selectedElevator: Elevator;\r\n    private allElevators: Elevator[];\r\n    private rendererAntialias: boolean;\r\n    private cameraSettings: CameraSettings = { ...cameraSettings };\r\n\r\n    @ViewChild('rendererCanvas', { static: true })\r\n    public rendererCanvas: ElementRef<HTMLCanvasElement>;\r\n\r\n    @ViewChild('canvasContainer', { static: true })\r\n    public canvasContainer: ElementRef<HTMLDivElement>;\r\n\r\n    constructor(\r\n        private engServ: EngineService,\r\n        private objectManager: ObjectManagerService,\r\n        private store: Store<AppState>,\r\n        private fontProvider: FontProviderService\r\n    ) {}\r\n\r\n    public ngOnInit(): void {\r\n        if (!this.rendererCanvas) throw new Error('rendererCanvas is not implemented!');\r\n\r\n        this.initPrerenderSettings();\r\n\r\n        const rendererSettings = {\r\n            canvas: this.rendererCanvas.nativeElement,\r\n            alpha: this.rendererAlpha, // transparent background\r\n            antialias: this.rendererAntialias // smooth edges\r\n        };\r\n\r\n        this.engServ.createScene(rendererSettings, this.canvasContainer, this.cameraSettings);\r\n        this.engServ.animate();\r\n\r\n        this.subscribeOnMouseClick();\r\n\r\n        // helpers\r\n        // this.objectManager.addToScene(this.objectManager.createCube());\r\n        // var axesHelper = new THREE.AxesHelper(50);\r\n        // this.objectManager.addToScene(axesHelper);\r\n\r\n        this.initSubscriptions();\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    private initPrerenderSettings(): void {\r\n        this.subscriptions.push(\r\n            this.store.select(state => state.generalSettings.renderer.rendererAlpha).subscribe(alpha => this.rendererAlpha = alpha),\r\n            this.store.select(state => state.generalSettings.renderer.rendererAntialias).subscribe(antialias => this.rendererAntialias = antialias),\r\n            this.store\r\n                .select(state => state.cameraSettings.cameraPosition)\r\n                .subscribe(cameraPosition => this.cameraSettings.cameraPosition = cameraPosition),\r\n            this.store\r\n                .select(state => state.cameraSettings.controlsTarget)\r\n                .subscribe(controlsTarget => this.cameraSettings.controlsTarget = controlsTarget)\r\n        );\r\n    }\r\n\r\n    private initSubscriptions(): void {\r\n        this.subscriptions.push(\r\n            this.store\r\n                .select(state => state.generalSettings.backgroundColor)\r\n                .subscribe(backgroundColor => this.engServ.setColorBackground(backgroundColor)),\r\n            combineLatest([\r\n                this.store.select(state => state.generalSettings.grid.gridColor),\r\n                this.store.select(state => state.generalSettings.grid.gridOpacity),\r\n                this.store.select(state => state.generalSettings.grid.gridEnable),\r\n                this.store.select(state => state.generalSettings.grid.gridSize)\r\n            ]).subscribe(([gridColor, gridOpacity, enable, gridSize]) => this.updateGrid({ gridColor, gridOpacity, gridSize }, enable)),\r\n            this.store.select(state => state.generalSettings.controls.enableDamping).subscribe(flag => this.engServ.controls.enableDamping = flag),\r\n            this.store.select(state => state.generalSettings.controls.dampingFactor).subscribe(dump => this.engServ.controls.dampingFactor = dump),\r\n            this.store\r\n                .select(state => state.generalSettings.controls.cameraMinDistance)\r\n                .subscribe(distance => this.engServ.controls.minDistance = distance),\r\n            this.store\r\n                .select(state => state.generalSettings.controls.cameraMaxDistance)\r\n                .subscribe(distance => this.engServ.controls.maxDistance = distance),\r\n            this.store.select(state => state.elevatorManagerSettings.selectedElevator).subscribe(elevator => this.selectedElevator = elevator),\r\n            this.store.select(state => state.elevatorManagerSettings.elevators).subscribe(elevators => this.allElevators = elevators),\r\n            // require loaded font before using\r\n            combineLatest([\r\n                this.store.select(state => state.elevatorManagerSettings.elevators).pipe(take(1)),\r\n                this.fontProvider.isLoaded.pipe(filter(value => value))\r\n            ]).subscribe(([elevators]) => this.reInitiateElevators(elevators))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * grid lifecircle:\r\n     * require to create new grid for changing color\r\n     */\r\n    private updateGrid({ gridColor, gridOpacity, gridSize }: GridUpdateSettings, enable: boolean = true): void {\r\n        if (this.grid) this.objectManager.removeObject(this.grid);\r\n        if (!enable) return;\r\n\r\n        this.grid = this.objectManager.createGrid(gridSize.size, gridSize.division, gridColor, gridColor);\r\n        (this.grid.material as any).opacity = gridOpacity;\r\n        this.objectManager.addToScene(this.grid);\r\n    }\r\n\r\n    private reInitiateElevators(elevators: Elevator[]): void {\r\n        const elevatorList: Elevator[] = [];\r\n\r\n        elevators.forEach((elevator, idx) => {\r\n            const config = this.objectManager.createElevatorConfiguration(elevator);\r\n            const elevatorObject = this.objectManager.buildElevatorObject(config, idx);\r\n\r\n            config.id = elevatorObject.id;\r\n            elevatorList.push(config);\r\n\r\n            if (this.selectedElevator?.id === elevator.id) {\r\n                this.objectManager.highlightSelectedElevator(config.id);\r\n                this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(config));\r\n            }\r\n        });\r\n\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators(elevatorList));\r\n    }\r\n\r\n    private subscribeOnMouseClick(): void {\r\n        let startPointX: number = 0;\r\n        let startPointY: number = 0;\r\n\r\n        fromEvent(this.rendererCanvas.nativeElement, 'mousedown')\r\n            .pipe(filter((event: MouseEvent) => event.button === 0))\r\n            .subscribe((event: MouseEvent) => {\r\n                event.preventDefault();\r\n                startPointX = event.x;\r\n                startPointY = event.y;\r\n            });\r\n\r\n        fromEvent(this.rendererCanvas.nativeElement, 'mouseup')\r\n            .pipe(filter((event: MouseEvent) => event.button === 0))\r\n            .subscribe((event: MouseEvent) => {\r\n                event.preventDefault();\r\n                // if it's not a click\r\n                if (!this.isClick(startPointX, event.x) || !this.isClick(startPointY, event.y)) return;\r\n\r\n                const mouse3D = new THREE.Vector3((event.clientX / window.innerWidth) * 2 - 1, -(event.clientY / window.innerHeight) * 2 + 1, 0.5);\r\n                const raycaster = new THREE.Raycaster();\r\n                raycaster.setFromCamera(mouse3D, this.engServ.camera);\r\n                const intersects = raycaster.intersectObjects(this.engServ.scene.children, true);\r\n                const selectedObject = intersects.find(obj => this.getElevatorParent(obj.object));\r\n\r\n                // if selected is not an elevator\r\n                if (!selectedObject) {\r\n                    if (this.selectedElevator) {\r\n                        this.objectManager.deHighlightSelectedElevator(this.selectedElevator.id);\r\n                        this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(null));\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                const selectedElevator = this.getElevatorParent(selectedObject.object);\r\n\r\n                // if selected is the same elevator\r\n                if (this.selectedElevator?.id === selectedElevator.id) return;\r\n                if (this.selectedElevator) this.objectManager.deHighlightSelectedElevator(this.selectedElevator.id);\r\n\r\n                const elevator = this.allElevators.find(item => item.id === selectedElevator.id);\r\n\r\n                this.objectManager.highlightSelectedElevator(elevator.id);\r\n                this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(elevator));\r\n            });\r\n    }\r\n\r\n    // check on click: true or shift: false\r\n    private isClick(startPoint: number, endPoint: number, threshold: number = 2): boolean {\r\n        return Math.abs(startPoint - endPoint) <= threshold;\r\n    }\r\n\r\n    private getElevatorParent(object: THREE.Object3D): THREE.Object3D {\r\n        let elem = object;\r\n\r\n        while (elem) {\r\n            elem = elem.parent;\r\n            if (elem?.userData?.isElevatorParent) break;\r\n        }\r\n\r\n        return elem;\r\n    }\r\n}\r\n","<div #canvasContainer class=\"engine-wrapper\">\r\n    <canvas #rendererCanvas id=\"renderCanvas\"></canvas>\r\n</div> \r\n","import { Action } from '@ngrx/store';\r\n\r\nconst SET_CAMERA_POSITION = 'SET_CAMERA_POSITION';\r\nconst RESET_CAMERA_POSITION = 'RESET_CAMERA_POSITION';\r\nconst SET_CONTROLS_TARGET = 'SET_CONTROLS_TARGET';\r\nconst RESET_CONTROLS_TARGET = 'RESET_CONTROLS_TARGET';\r\n\r\nclass SetCameraPostion implements Action {\r\n    type = SET_CAMERA_POSITION;\r\n    constructor(public payload: { x: number, y: number, z: number }) {}\r\n}\r\n\r\nclass ResetCameraPosition implements Action {\r\n    type = RESET_CAMERA_POSITION;\r\n}\r\n\r\nclass SetControlsTarget implements Action {\r\n    type = SET_CONTROLS_TARGET;\r\n    constructor(public payload: { x: number, y: number, z: number }) {}\r\n}\r\n\r\nclass ResetControlsTarget implements Action {\r\n    type = RESET_CONTROLS_TARGET;\r\n}\r\n\r\nexport default {\r\n    SetCameraPostion,\r\n    ResetCameraPosition,\r\n    SetControlsTarget,\r\n    ResetControlsTarget,\r\n\r\n    SET_CAMERA_POSITION,\r\n    RESET_CAMERA_POSITION,\r\n    SET_CONTROLS_TARGET,\r\n    RESET_CONTROLS_TARGET\r\n};\r\n\r\n","import { CameraSettings } from './camera-settings.model';\r\nimport DefaultState from '../default-state.provider';\r\nimport cameraSettings from 'app/constants/camera-settings.constants';\r\nimport cameraSettingsActions from './camera-settings.actions';\r\n\r\nlet defaultState = new DefaultState().getState();\r\ndefaultState = !defaultState ? cameraSettings : defaultState[cameraSettings.key];\r\n\r\nexport function cameraSettingsReducer(state: CameraSettings = defaultState, action: any) {\r\n\tswitch (action.type) {\r\n  \t\tcase cameraSettingsActions.SET_CAMERA_POSITION:\r\n  \t\t\treturn { ...state, cameraPosition: action.payload };\r\n\t\t  \r\n\t\tcase cameraSettingsActions.RESET_CAMERA_POSITION:\r\n  \t\t\treturn { ...state, cameraPosition: cameraSettings.cameraPosition };\r\n\t\t  \r\n\t\tcase cameraSettingsActions.SET_CONTROLS_TARGET:\r\n\t\t\treturn { ...state, controlsTarget: action.payload };\r\n\t\t  \r\n\t\tcase cameraSettingsActions.RESET_CONTROLS_TARGET:\r\n\t\t\treturn { ...state, controlsTarget: cameraSettings.controlsTarget };\r\n\r\n  \t\tdefault:\r\n  \t\t\treturn state;\r\n\t}\r\n}","import { localStorageProject } from '../constants/project.constants';\r\n\r\nexport default class DefaultState {\r\n    private state: any = null;\r\n\r\n    constructor() {\r\n        this.state = this.getLocalStorage();\r\n    }\r\n\r\n    public getState(): any {\r\n        return this.state;\r\n    }\r\n\r\n    public setState(state: any): void {\r\n        localStorage.setItem(localStorageProject, JSON.stringify(state));\r\n    }\r\n\r\n    private getLocalStorage(): any {\r\n        return JSON.parse(localStorage.getItem(localStorageProject));\r\n    }\r\n}","import { Action } from '@ngrx/store';\r\nimport Elevator from 'app/shared/classes/elevator.class';\r\n\r\nconst ADD_NEW_ELEVATOR = 'ADD_NEW_ELEVATOR';\r\nconst SET_ALL_ELEVATORS = 'SET_ALL_ELEVATORS';\r\nconst SET_SELECTED_ELEVATOR = 'SET_SELECTED_ELEVATOR';\r\n\r\nconst SET_ELEVATOR_WALL_COLOR = 'SET_ELEVATOR_WALL_COLOR';\r\nconst SET_ELEVATOR_WALL_OPACITY = 'SET_ELEVATOR_WALL_OPACITY';\r\nconst SET_ELEVATOR_WALL_TRANSPARENT = 'SET_ELEVATOR_WALL_TRANSPARENT';\r\nconst SET_ELEVATOR_CAPACITY = 'SET_ELEVATOR_CAPACITY';\r\nconst SET_ELEVATOR_SPEED = 'SET_ELEVATOR_SPEED';\r\nconst SET_ELEVATOR_COVERED_FLOORS = 'SET_ELEVATOR_COVERED_FLOORS';\r\nconst SET_ELEVATOR_CURRENT_FLOOR = 'SET_ELEVATOR_CURRENT_FLOOR';\r\n\r\nconst SET_WIREFRAMES_EXPAND = 'SET_WIREFRAMES_EXPAND';\r\nconst SET_WIREFRAMES_SHOWED = 'SET_WIREFRAMES_SHOWED';\r\nconst SET_WIREFRAMES_COLOR = 'SET_WIREFRAMES_COLOR';\r\n\r\nconst RESET_ELEVATOR_MANAGER_SETTINGS_ALL_SETTINGS = 'RESET_ELEVATOR_MANAGER_SETTINGS_ALL_SETTINGS';\r\n\r\nclass AddNewElevator implements Action {\r\n    type = ADD_NEW_ELEVATOR;\r\n    constructor(public payload: Elevator) {}\r\n}\r\n\r\nclass SetAllElevators implements Action {\r\n    type = SET_ALL_ELEVATORS;\r\n    constructor(public payload: Elevator[]) {}\r\n}\r\n\r\nclass SetSelectedElevator implements Action {\r\n    type = SET_SELECTED_ELEVATOR;\r\n    constructor(public payload: Elevator) {}\r\n}\r\n\r\nclass SetElevatorWallColor implements Action {\r\n    type = SET_ELEVATOR_WALL_COLOR;\r\n    constructor(public payload: THREE.Color) {}\r\n}\r\n\r\nclass SetElevatorWallOpacity implements Action {\r\n    type = SET_ELEVATOR_WALL_OPACITY;\r\n    constructor(public payload: number) {}\r\n}\r\n\r\nclass SetElevatorWallTransparent implements Action {\r\n    type = SET_ELEVATOR_WALL_TRANSPARENT;\r\n    constructor(public payload: boolean) {}\r\n}\r\n\r\nclass SetElevatorCapacity implements Action {\r\n    type = SET_ELEVATOR_CAPACITY;\r\n    constructor(public payload: number) {}\r\n}\r\n\r\nclass SetElevatorSpeed implements Action {\r\n    type = SET_ELEVATOR_SPEED;\r\n    constructor(public payload: number) {}\r\n}\r\n\r\nclass SetElevatorCoveredFloors implements Action {\r\n    type = SET_ELEVATOR_COVERED_FLOORS;\r\n    constructor(public payload: number) {}\r\n}\r\n\r\nclass SetElevatorCurrentFloor implements Action {\r\n    type = SET_ELEVATOR_CURRENT_FLOOR;\r\n    constructor(public payload: number) {}\r\n}\r\n\r\n// wireframes\r\nclass SetWireframesExpand implements Action {\r\n    type = SET_WIREFRAMES_EXPAND;\r\n    constructor(public payload: boolean) {}\r\n}\r\n\r\nclass SetWireframesShowed implements Action {\r\n    type = SET_WIREFRAMES_SHOWED;\r\n    constructor(public payload: boolean) {}\r\n}\r\n\r\nclass SetWireframesColor implements Action {\r\n    type = SET_WIREFRAMES_COLOR;\r\n    constructor(public payload: THREE.Color | number | string) {}\r\n}\r\n\r\nclass ResetAllSettings implements Action {\r\n    type = RESET_ELEVATOR_MANAGER_SETTINGS_ALL_SETTINGS;\r\n}\r\n\r\nexport default {\r\n    ADD_NEW_ELEVATOR,\r\n    SET_ALL_ELEVATORS,\r\n    SET_SELECTED_ELEVATOR,\r\n    SET_ELEVATOR_WALL_COLOR,\r\n    SET_ELEVATOR_WALL_OPACITY,\r\n    SET_ELEVATOR_WALL_TRANSPARENT,\r\n    SET_ELEVATOR_CAPACITY,\r\n    SET_ELEVATOR_SPEED,\r\n    SET_ELEVATOR_COVERED_FLOORS,\r\n    SET_ELEVATOR_CURRENT_FLOOR,\r\n    SET_WIREFRAMES_EXPAND,\r\n    SET_WIREFRAMES_SHOWED,\r\n    SET_WIREFRAMES_COLOR,\r\n    RESET_ELEVATOR_MANAGER_SETTINGS_ALL_SETTINGS,\r\n\r\n    AddNewElevator,\r\n    SetAllElevators,\r\n    SetSelectedElevator,\r\n    SetElevatorWallColor,\r\n    SetElevatorWallOpacity,\r\n    SetElevatorWallTransparent,\r\n    SetElevatorCapacity,\r\n    SetElevatorSpeed,\r\n    SetElevatorCoveredFloors,\r\n    SetElevatorCurrentFloor,\r\n    SetWireframesExpand,\r\n    SetWireframesShowed,\r\n    SetWireframesColor,\r\n    ResetAllSettings\r\n};\r\n","import { ElevatorManagerSettings } from './elevator-manager-settings.model';\r\nimport DefaultState from '../default-state.provider';\r\nimport elevatorManagerSettings from 'app/constants/elevator-manager-settings.constants';\r\nimport ElevatorManagerActions from './elevator-manager-settings.actions';\r\n\r\nlet defaultState = new DefaultState().getState();\r\ndefaultState = !defaultState ? elevatorManagerSettings : defaultState[elevatorManagerSettings.key];\r\n\r\nexport function elevatorManagerReducer(state: ElevatorManagerSettings = defaultState, action: any) {\r\n    switch (action.type) {\r\n        case ElevatorManagerActions.ADD_NEW_ELEVATOR:\r\n            return { ...state, elevators: [...state.elevators, { ...action.payload }] };\r\n\r\n        case ElevatorManagerActions.SET_ALL_ELEVATORS:\r\n            return { ...state, elevators: [...action.payload] };\r\n\r\n        case ElevatorManagerActions.SET_SELECTED_ELEVATOR:\r\n            return { ...state, selectedElevator: action.payload ? { ...action.payload } : null };\r\n\r\n        case ElevatorManagerActions.SET_ELEVATOR_WALL_COLOR:\r\n            return { ...state, defaultElevator: { ...state.defaultElevator, wallColor: action.payload } };\r\n\r\n        case ElevatorManagerActions.SET_ELEVATOR_WALL_OPACITY:\r\n            return { ...state, defaultElevator: { ...state.defaultElevator, wallOpacity: action.payload } };\r\n\r\n        case ElevatorManagerActions.SET_ELEVATOR_WALL_TRANSPARENT:\r\n            return { ...state, defaultElevator: { ...state.defaultElevator, wallTransparent: action.payload } };\r\n\r\n        case ElevatorManagerActions.SET_ELEVATOR_CAPACITY:\r\n            return { ...state, defaultElevator: { ...state.defaultElevator, capacity: action.payload } };\r\n\r\n        case ElevatorManagerActions.SET_ELEVATOR_SPEED:\r\n            return { ...state, defaultElevator: { ...state.defaultElevator, speed: action.payload } };\r\n\r\n        case ElevatorManagerActions.SET_ELEVATOR_COVERED_FLOORS:\r\n            return { ...state, defaultElevator: { ...state.defaultElevator, coveredFloors: action.payload } };\r\n\r\n        case ElevatorManagerActions.SET_ELEVATOR_CURRENT_FLOOR:\r\n            return { ...state, defaultElevator: { ...state.defaultElevator, currentFloor: action.payload } };\r\n\r\n        case ElevatorManagerActions.SET_WIREFRAMES_EXPAND:\r\n            return { ...state, wireframes: { ...state.wireframes, wireframesSettingsExpanded: action.payload } };\r\n\r\n        case ElevatorManagerActions.SET_WIREFRAMES_SHOWED:\r\n            return { ...state, wireframes: { ...state.wireframes, isWireframesShowed: action.payload } };\r\n\r\n        case ElevatorManagerActions.SET_WIREFRAMES_COLOR:\r\n            return { ...state, wireframes: { ...state.wireframes, color: action.payload } };\r\n\r\n        case ElevatorManagerActions.RESET_ELEVATOR_MANAGER_SETTINGS_ALL_SETTINGS:\r\n            return elevatorManagerSettings;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { Action } from '@ngrx/store';\r\nimport { GridSizeModel } from 'app/shared/grid-size.model';\r\n\r\nconst SET_GENERAL_SETTINGS_COLOR = 'SET_GENERAL_SETTINGS_COLOR';\r\nconst RESET_GENERAL_SETTINGS_COLOR = 'RESET_GENERAL_SETTINGS_COLOR';\r\nconst RESET_GENERAL_SETTINGS_ALL_SETTINGS = 'RESET_GENERAL_SETTINGS_ALL_SETTINGS';\r\n\r\nconst SET_GRID_COLOR = 'SET_GRID_COLOR';\r\nconst RESET_GRID_COLOR = 'RESET_GRID_COLOR';\r\nconst SET_GRID_SETTINGS_EXPAND = 'SET_GRID_SETTINGS_EXPAND';\r\nconst SET_GRID_ENABLE = 'SET_GRID_ENABLE';\r\nconst SET_GRID_OPACITY = 'SET_GRID_OPACITY';\r\nconst SET_GRID_SIZE = 'SET_GRID_SIZE';\r\nconst RESET_GRID_SIZE = 'RESET_GRID_SIZE';\r\n\r\nconst SET_RENDERER_EXPAND = 'SET_RENDERER_EXPAND';\r\nconst SET_RENDERER_ALPHA = 'SET_RENDERER_ALPHA';\r\nconst SET_RENDERER_ANTIALIAS = 'SET_RENDERER_ANTIALIAS';\r\n\r\nconst SET_CONTROLS_SETTINGS_EXPAND = 'SET_CONTROLS_SETTINGS_EXPAND';\r\nconst SET_CONTROLS_ENABLE_DUMPING = 'SET_CONTROLS_ENABLE_DUMPING';\r\nconst SET_CONTROLS_DUMPING_FACTOR = 'SET_CONTROLS_DUMPING_FACTOR';\r\nconst RESET_CONTROLS_DUMPING_FACTOR = 'RESET_CONTROLS_DUMPING_FACTOR';\r\nconst SET_CONTROLS_CAMERA_MIN_DISTANCE = 'SET_CONTROLS_CAMERA_MIN_DISTANCE';\r\nconst SET_CONTROLS_CAMERA_MAX_DISTANCE = 'SET_CONTROLS_CAMERA_MAX_DISTANCE';\r\n\r\n// general settings\r\nclass SetBackgroundColor implements Action {\r\n    type = SET_GENERAL_SETTINGS_COLOR;\r\n    constructor(public payload: string) {}\r\n}\r\n\r\nclass ResetBackgroundColor implements Action {\r\n    type = RESET_GENERAL_SETTINGS_COLOR;\r\n}\r\n\r\nclass ResetAllSettings implements Action {\r\n    type = RESET_GENERAL_SETTINGS_ALL_SETTINGS;\r\n}\r\n\r\n// grid settings\r\nclass SetGridColor implements Action {\r\n    type = SET_GRID_COLOR;\r\n    constructor(public payload: string) {}\r\n}\r\n\r\nclass ResetGridColor implements Action {\r\n    type = RESET_GRID_COLOR;\r\n}\r\n\r\nclass SetGridSettingsExpand implements Action {\r\n    type = SET_GRID_SETTINGS_EXPAND;\r\n    constructor(public payload: boolean) {}\r\n}\r\n\r\nclass SetGridEnable implements Action {\r\n    type = SET_GRID_ENABLE;\r\n    constructor(public payload: boolean) {}\r\n}\r\n\r\nclass SetGridOpacity implements Action {\r\n    type = SET_GRID_OPACITY;\r\n    constructor(public payload: number) {}\r\n}\r\n\r\nclass SetGridSize implements Action {\r\n    type = SET_GRID_SIZE;\r\n    constructor(public payload: GridSizeModel) {}\r\n}\r\n\r\nclass ResetGridSize implements Action {\r\n    type = RESET_GRID_SIZE;\r\n}\r\n\r\n// renderer settings\r\nclass SetRendererExpand implements Action {\r\n    type = SET_RENDERER_EXPAND;\r\n    constructor(public payload: boolean) {}\r\n}\r\n\r\nclass SetRendererAlpha implements Action {\r\n    type = SET_RENDERER_ALPHA;\r\n    constructor(public payload: boolean) {}\r\n}\r\n\r\nclass SetRendererAntialias implements Action {\r\n    type = SET_RENDERER_ANTIALIAS;\r\n    constructor(public payload: boolean) {}\r\n}\r\n\r\n// controls\r\nclass SetControlsSettingsExpand implements Action {\r\n    type = SET_CONTROLS_SETTINGS_EXPAND;\r\n    constructor(public payload: boolean) {}\r\n}\r\n\r\nclass SetControlsDumping implements Action {\r\n    type = SET_CONTROLS_ENABLE_DUMPING;\r\n    constructor(public payload: boolean) {}\r\n}\r\n\r\nclass SetControlsDumpingFactor implements Action {\r\n    type = SET_CONTROLS_DUMPING_FACTOR;\r\n    constructor(public payload: number) {}\r\n}\r\n\r\nclass ResetControlsDumpingFactor implements Action {\r\n    type = RESET_CONTROLS_DUMPING_FACTOR;\r\n}\r\n\r\nclass SetControlsCameraMinDistance implements Action {\r\n    type = SET_CONTROLS_CAMERA_MIN_DISTANCE;\r\n    constructor(public payload: number) {}\r\n}\r\n\r\nclass SetControlsCameraMaxDistance implements Action {\r\n    type = SET_CONTROLS_CAMERA_MAX_DISTANCE;\r\n    constructor(public payload: number) {}\r\n}\r\n\r\nexport default {\r\n    SetBackgroundColor,\r\n    ResetBackgroundColor,\r\n    ResetAllSettings,\r\n    SetGridColor,\r\n    ResetGridColor,\r\n    SetGridSettingsExpand,\r\n    SetGridEnable,\r\n    SetGridOpacity,\r\n    SetGridSize,\r\n    ResetGridSize,\r\n    SetRendererExpand,\r\n    SetRendererAlpha,\r\n    SetRendererAntialias,\r\n    SetControlsSettingsExpand,\r\n    SetControlsDumping,\r\n    SetControlsDumpingFactor,\r\n    ResetControlsDumpingFactor,\r\n    SetControlsCameraMinDistance,\r\n    SetControlsCameraMaxDistance,\r\n\r\n    SET_GENERAL_SETTINGS_COLOR,\r\n    RESET_GENERAL_SETTINGS_COLOR,\r\n    RESET_GENERAL_SETTINGS_ALL_SETTINGS,\r\n    SET_GRID_COLOR,\r\n    RESET_GRID_COLOR,\r\n    SET_GRID_SETTINGS_EXPAND,\r\n    SET_GRID_ENABLE,\r\n    SET_GRID_OPACITY,\r\n    SET_GRID_SIZE,\r\n    RESET_GRID_SIZE,\r\n    SET_RENDERER_EXPAND,\r\n    SET_RENDERER_ALPHA,\r\n    SET_RENDERER_ANTIALIAS,\r\n    SET_CONTROLS_SETTINGS_EXPAND,\r\n    SET_CONTROLS_ENABLE_DUMPING,\r\n    SET_CONTROLS_DUMPING_FACTOR,\r\n    RESET_CONTROLS_DUMPING_FACTOR,\r\n    SET_CONTROLS_CAMERA_MIN_DISTANCE,\r\n    SET_CONTROLS_CAMERA_MAX_DISTANCE,\r\n};","import GeneralActions from './general-settings.actions';\r\nimport { GeneralSettings } from './general-settings.model'\r\nimport DefaultState from '../default-state.provider';\r\nimport generalSettings from 'app/constants/general-settings.constants';\r\n\r\nlet defaultState = new DefaultState().getState();\r\ndefaultState = !defaultState ? generalSettings : defaultState[generalSettings.key];\r\n\r\nexport function generalSettingsReducer(state: GeneralSettings = defaultState, action: any) {\r\n\tswitch (action.type) {\r\n  \t\tcase GeneralActions.SET_GENERAL_SETTINGS_COLOR:\r\n  \t\t\treturn { ...state, backgroundColor: action.payload };\r\n\r\n  \t\tcase GeneralActions.RESET_GENERAL_SETTINGS_COLOR:\r\n\t\t\t  return { ...state, backgroundColor: generalSettings.backgroundColor };\r\n\r\n  \t\tcase GeneralActions.RESET_GENERAL_SETTINGS_ALL_SETTINGS: return generalSettings;\r\n\t\t\t  \r\n\t\tcase GeneralActions.SET_GRID_COLOR:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tgrid: { ...state.grid, gridColor: action.payload }\r\n\t\t\t}; \r\n\r\n\t\tcase GeneralActions.RESET_GRID_COLOR:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tgrid: { ...state.grid, gridColor: generalSettings.grid.gridColor }\r\n\t\t\t}; \r\n\r\n\t\tcase GeneralActions.SET_GRID_SETTINGS_EXPAND:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tgrid: { ...state.grid, gridSettingsExpanded: action.payload }\r\n\t\t\t}; \r\n\r\n\t\tcase GeneralActions.SET_GRID_ENABLE:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tgrid: { ...state.grid, gridEnable: action.payload }\r\n\t\t\t}; \r\n\r\n\t\tcase GeneralActions.SET_GRID_OPACITY:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tgrid: { ...state.grid, gridOpacity: action.payload }\r\n\t\t\t}; \r\n\r\n\t\tcase GeneralActions.SET_GRID_SIZE:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tgrid: { ...state.grid, gridSize: action.payload }\r\n\t\t\t}; \r\n\t\t\t\r\n\t\tcase GeneralActions.RESET_GRID_SIZE:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tgrid: { ...state.grid, gridSize: generalSettings.grid.gridSize }\r\n\t\t\t}; \r\n\t\t\t\r\n\t\tcase GeneralActions.SET_RENDERER_EXPAND:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\trenderer: { ...state.renderer, rendererSettingsExpanded: action.payload }\r\n\t\t\t}; \r\n\t\t\t\r\n\t\tcase GeneralActions.SET_RENDERER_ALPHA:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\trenderer: { ...state.renderer, rendererAlpha: action.payload }\r\n\t\t\t}; \r\n\t\t\t\r\n\t\tcase GeneralActions.SET_RENDERER_ANTIALIAS:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\trenderer: { ...state.renderer, rendererAntialias: action.payload }\r\n\t\t\t}; \r\n\t\t\t\r\n\t\tcase GeneralActions.SET_CONTROLS_SETTINGS_EXPAND:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tcontrols: { ...state.controls, controlsSettingsExpanded: action.payload }\r\n\t\t\t}; \r\n\t\t\t\r\n\t\tcase GeneralActions.SET_CONTROLS_ENABLE_DUMPING:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tcontrols: { ...state.controls, enableDamping: action.payload }\r\n\t\t\t}; \r\n\t\t\t\r\n\t\tcase GeneralActions.SET_CONTROLS_DUMPING_FACTOR:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tcontrols: { ...state.controls, dampingFactor: action.payload }\r\n\t\t\t}; \r\n\t\t\t\r\n\t\tcase GeneralActions.RESET_CONTROLS_DUMPING_FACTOR:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tcontrols: { ...state.controls, dampingFactor: generalSettings.controls.dampingFactor }\r\n\t\t\t}; \r\n\t\t\t\r\n\t\tcase GeneralActions.SET_CONTROLS_CAMERA_MIN_DISTANCE:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tcontrols: { ...state.controls, cameraMinDistance: action.payload }\r\n\t\t\t}; \r\n\t\t\t\r\n\t\tcase GeneralActions.SET_CONTROLS_CAMERA_MAX_DISTANCE:\r\n\t\t\treturn { \r\n\t\t\t\t...state,\r\n\t\t\t\tcontrols: { ...state.controls, cameraMaxDistance: action.payload }\r\n\t\t\t}; \r\n\r\n  \t\tdefault:\r\n  \t\t\treturn state;\r\n\t}\r\n}","import { generalSettingsReducer } from './general-settings/general-settings.reducer';\r\nimport { settingsPanelReducer } from './settings-panel/settings-panel.reducer';\r\nimport { elevatorManagerReducer } from './elevator-manager-settings/elevator-manager-settings.reducer';\r\nimport { cameraSettingsReducer } from './camera-settings/camera-settings.reducer';\r\n\r\nexport const rootReducer = {\r\n    generalSettings: generalSettingsReducer,\r\n    settingsPanel: settingsPanelReducer,\r\n    elevatorManagerSettings: elevatorManagerReducer,\r\n    cameraSettings: cameraSettingsReducer,\r\n};","import { Action } from '@ngrx/store';\r\n\r\nconst SET_PANEL_POSITION = 'SET_PANEL_POSITION';\r\nconst SET_PANEL_OPENED = 'SET_PANEL_OPENED';\r\nconst SET_SELECTED_TAB = 'SET_SELECTED_TAB';\r\n\r\nclass SetPanelPosition implements Action {\r\n    type = SET_PANEL_POSITION;\r\n    constructor(public payload: string) {}\r\n}\r\n\r\nclass SetPanelOpened implements Action {\r\n    type = SET_PANEL_OPENED;\r\n    constructor(public payload: boolean) {}\r\n}\r\n\r\nclass SetSelectedTab implements Action {\r\n    type = SET_SELECTED_TAB;\r\n    constructor(public payload: string) {}\r\n}\r\n\r\nexport default {\r\n    SetPanelPosition,\r\n    SetPanelOpened,\r\n    SetSelectedTab,\r\n\r\n    SET_PANEL_POSITION,\r\n    SET_PANEL_OPENED,\r\n    SET_SELECTED_TAB\r\n};\r\n\r\n","import { SettingsPanel } from './settings-panel.model';\r\nimport SettingsPanelActions from './settings-panel.actions';\r\nimport settingsPanel from 'app/constants/settings-panel.constants';\r\nimport DefaultState from '../default-state.provider';\r\n\r\nlet defaultState = new DefaultState().getState();\r\ndefaultState = !defaultState ? settingsPanel : defaultState[settingsPanel.key];\r\n\r\nexport function settingsPanelReducer(state: SettingsPanel = defaultState, action: any) {\r\n\tswitch (action.type) {\r\n  \t\tcase SettingsPanelActions.SET_PANEL_OPENED:\r\n  \t\t\treturn { ...state, formOpened: action.payload };\r\n\r\n  \t\tcase SettingsPanelActions.SET_PANEL_POSITION:\r\n            return { ...state, formPosition: action.payload };\r\n\r\n  \t\tcase SettingsPanelActions.SET_SELECTED_TAB:\r\n            return { ...state, selectedTab: action.payload };\r\n\r\n  \t\tdefault:\r\n  \t\t\treturn state;\r\n\t}\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'attention-sign',\n  templateUrl: './attention-sign.component.html',\n  styleUrls: ['./attention-sign.component.less']\n})\nexport class AttentionSignComponent {}\n","<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n    <path fill=\"#f98e2e\" d=\"M503 387L322 53a75 75 0 00-66-39l-60 242 60 242h181a75 75 0 0066-111z\"/>\n    <path fill=\"#fab037\" d=\"M190 53L9 387a75 75 0 0066 111h181V14c-28 0-53 15-66 39z\"/>\n    <path fill=\"#fbd141\" d=\"M453 422L265 75h-9l-60 181 60 182h188z\"/>\n    <path fill=\"#fbf24a\" d=\"M247 75L59 422l9 16h188V75z\"/>\n    <path fill=\"#434343\" d=\"M241 348h30v30h-30z\"/>\n    <path fill=\"#434343\" d=\"M241 203h30v115h-30z\"/>\n  </svg>","import * as THREE from 'three';\r\nimport { Injectable } from '@angular/core';\r\nimport { EngineService } from './engine.service';\r\nimport elevatorManagerSettings from 'app/constants/elevator-manager-settings.constants';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ElevatorAnimationManagerService {\r\n    constructor(private engineService: EngineService) {}\r\n\r\n    public start(object3d: THREE.Object3D, speed: number): void {\r\n        const promiseStart = this.moveSmooth(object3d, speed);\r\n        promiseStart.then(() => this.moveLinear(object3d, speed)).then(() => this.moveSmooth(object3d, speed, true));\r\n    }\r\n\r\n    public pause(): void {\r\n        this.engineService.clipActions.forEach(clipA => clipA.stop());\r\n    }\r\n\r\n    public moveSmooth(object3d: THREE.Object3D, speed: number, isEnd: boolean = false): Promise<void> {\r\n        return new Promise(resolve => {\r\n            const { position } = object3d;\r\n            const { startEndSmooth } = elevatorManagerSettings.animationTime;\r\n            const distance = elevatorManagerSettings.defaultElevator.floorHeight * startEndSmooth;\r\n            const points = this.getSmoothCurve(position.y, position.y + distance, speed * startEndSmooth, isEnd).getPoints(10);\r\n            const timeArray = [].map.call(points, point => point.y);\r\n            const distanceArray = [];\r\n            [].forEach.call(points, point => distanceArray.push(position.x, point.x, position.z));\r\n            // name, time keyframes, position keyframe\r\n            const positionKF = new THREE.VectorKeyframeTrack('.position', timeArray, distanceArray);\r\n            const clip = new THREE.AnimationClip('moveStartSmooth', speed * startEndSmooth, [positionKF]);\r\n            const mixer = new THREE.AnimationMixer(object3d);\r\n            const clipAction = mixer.clipAction(clip);\r\n\r\n            clipAction.loop = THREE.LoopOnce;\r\n            clipAction.clampWhenFinished = true;\r\n            clipAction.play();\r\n            this.engineService.clipActions.push(clipAction);\r\n            mixer.addEventListener('finished', () => {\r\n                this.removeMixer(clipAction);\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    public moveLinear(object3d: THREE.Object3D, speed: number): Promise<void> {\r\n        return new Promise(resolve => {\r\n            const { position: pos } = object3d;\r\n            const { linear } = elevatorManagerSettings.animationTime;\r\n            const distance = elevatorManagerSettings.defaultElevator.floorHeight * linear;\r\n            // name, time keyframes, position keyframe\r\n            const positionKF = new THREE.VectorKeyframeTrack('.position', [0, speed * linear], [pos.x, pos.y, pos.z, pos.x, pos.y + distance, pos.z]);\r\n            const clip = new THREE.AnimationClip('moveStartSmooth', speed * linear, [positionKF]);\r\n            const mixer = new THREE.AnimationMixer(object3d);\r\n            const clipAction = mixer.clipAction(clip);\r\n\r\n            clipAction.loop = THREE.LoopOnce;\r\n            clipAction.clampWhenFinished = true;\r\n            clipAction.play();\r\n            this.engineService.clipActions.push(clipAction);\r\n            mixer.addEventListener('finished', () => {\r\n                this.removeMixer(clipAction);\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    /* example:\r\n        this.openCloseDoor(object3d.getObjectByName('door-left'), true);\r\n        this.openCloseDoor(object3d.getObjectByName('door-right'), false);\r\n        setTimeout(() => {\r\n            this.openCloseDoor(object3d.getObjectByName('door-left'), true, true);\r\n            this.openCloseDoor(object3d.getObjectByName('door-right'), false, true);\r\n        }, 2500);\r\n    */\r\n    public openCloseDoor(door: THREE.Object3D, isDoorleft: boolean, close: boolean = false): Promise<void> {\r\n        return new Promise(resolve => {\r\n            let distance = isDoorleft ? elevatorManagerSettings.defaultElevator.length : elevatorManagerSettings.defaultElevator.length / 2;\r\n            const { doorOpenClose } = elevatorManagerSettings.animationTime;\r\n            if (close) distance *= -1;\r\n            const positionKF = new THREE.VectorKeyframeTrack(\r\n                '.position',\r\n                [0, doorOpenClose],\r\n                [door.position.x, door.position.y, door.position.z, door.position.x - distance, door.position.y, door.position.z]\r\n            );\r\n            const clip = new THREE.AnimationClip('moveEndSmooth', doorOpenClose, [positionKF]);\r\n            const mixer = new THREE.AnimationMixer(door);\r\n            const clipAction = mixer.clipAction(clip);\r\n\r\n            clipAction.loop = THREE.LoopOnce;\r\n            clipAction.clampWhenFinished = true;\r\n            clipAction.play();\r\n            this.engineService.clipActions.push(clipAction);\r\n            mixer.addEventListener('finished', () => {\r\n                this.removeMixer(clipAction);\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n\r\n    private getSmoothCurve(startPoint: number, endPoint: number, animationTime: number, useReverse: boolean = false): THREE.QuadraticBezierCurve {\r\n        return useReverse\r\n            ? new THREE.CubicBezierCurve(\r\n                  new THREE.Vector2(startPoint, 0),\r\n                  new THREE.Vector2((endPoint - startPoint) * 0.5 + startPoint, animationTime * 0.5),\r\n                  new THREE.Vector2(endPoint, animationTime * 0.5),\r\n                  new THREE.Vector2(endPoint, animationTime)\r\n              )\r\n            : new THREE.CubicBezierCurve(\r\n                  new THREE.Vector2(startPoint, 0),\r\n                  new THREE.Vector2(startPoint, animationTime * 0.5),\r\n                  new THREE.Vector2((endPoint - startPoint) * 0.5 + startPoint, animationTime * 0.5),\r\n                  new THREE.Vector2(endPoint, animationTime)\r\n              );\r\n    }\r\n\r\n    private removeMixer(usedClipActions: THREE.AnimationAction): void {\r\n        const idx = this.engineService.clipActions.findIndex(clipAction => clipAction === usedClipActions);\r\n\r\n        this.engineService.clipActions.splice(idx, 1);\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\nimport * as OrbitControls from 'three-orbitcontrols';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, skip } from 'rxjs/operators';\r\nimport { Injectable, ElementRef, OnDestroy, NgZone } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'app/redux/root-interface';\r\nimport { CameraSettings } from 'app/redux/camera-settings/camera-settings.model';\r\nimport CameraSettingsActions from '../redux/camera-settings/camera-settings.actions';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class EngineService implements OnDestroy {\r\n    private renderer: THREE.WebGLRenderer;\r\n    private light: THREE.AmbientLight;\r\n    private container: HTMLElement;\r\n    private frameId: number = null;\r\n    private clock = new THREE.Clock();\r\n\r\n    public scene: THREE.Scene;\r\n    public camera: THREE.PerspectiveCamera;\r\n    public controls: OrbitControls;\r\n    public clipActions: THREE.AnimationAction[] = [];\r\n\r\n    constructor(private ngZone: NgZone, private store: Store<AppState>) {}\r\n\r\n    public ngOnDestroy(): void {\r\n        if (this.frameId != null) cancelAnimationFrame(this.frameId);\r\n    }\r\n\r\n    public createScene(settings: THREE.WebGLRendererParameters, container: ElementRef<HTMLDivElement>, cameraSettings: CameraSettings): void {\r\n        // The first step is to get the reference of the canvas element from our HTML document\r\n        this.renderer = new THREE.WebGLRenderer(settings);\r\n        this.renderer.setSize(container.nativeElement.clientWidth, container.nativeElement.clientHeight);\r\n        this.container = container.nativeElement;\r\n        this.scene = new THREE.Scene();\r\n\r\n        this.camera = new THREE.PerspectiveCamera(50, this.container.clientWidth / this.container.clientHeight, 0.1, 1000);\r\n\r\n        // soft white light\r\n        this.light = new THREE.AmbientLight(0x404040);\r\n        this.light.position.z = 10;\r\n\r\n        // mouse control\r\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n        this.controls.screenSpacePanning = false;\r\n        // this.controls.maxPolarAngle = Math.PI / 2;\r\n\r\n        this.scene.add(this.light);\r\n        this.scene.add(this.camera);\r\n\r\n        this.setInitialCameraPosition(cameraSettings);\r\n        this.subscribeOnCameraMovement();\r\n    }\r\n\r\n    public animate(): void {\r\n        // We have to run this outside angular zones,\r\n        // because it could trigger heavy changeDetection cycles.\r\n        this.ngZone.runOutsideAngular(() => {\r\n            document.readyState !== 'loading' ? this.render() : window.addEventListener('DOMContentLoaded', () => this.render());\r\n            window.addEventListener('resize', () => this.resize());\r\n        });\r\n    }\r\n\r\n    public render(): void {\r\n        this.frameId = requestAnimationFrame(() => this.render());\r\n        // animation\r\n        // this.cube.rotation.x += 0.01;\r\n        // this.cube.rotation.y += 0.01;\r\n\r\n        if (this.clipActions[0]) {\r\n            const delta = this.clock.getDelta();\r\n\r\n            this.clipActions.forEach(clipAction => clipAction.getMixer().update(delta));\r\n        }\r\n\r\n        this.controls.update();\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n    public resize(): void {\r\n        const width = this.container.clientWidth;\r\n        const height = this.container.clientHeight;\r\n\r\n        this.camera.aspect = width / height;\r\n        this.camera.updateProjectionMatrix();\r\n\r\n        this.renderer.setSize(width, height);\r\n    }\r\n\r\n    public setColorBackground(color: string): void {\r\n        this.scene.background = new THREE.Color(color);\r\n    }\r\n\r\n    public addToScene(obj: any): void {\r\n        this.scene.add(obj);\r\n    }\r\n\r\n    public removeFromScene(obj: any): void {\r\n        this.scene.remove(obj);\r\n    }\r\n\r\n    public getObjectById(id: number): THREE.Object3D {\r\n        return this.scene.getObjectById(id);\r\n    }\r\n\r\n    public getObjectByName(name: string): THREE.Object3D {\r\n        return this.scene.getObjectByName(name);\r\n    }\r\n\r\n    public setInitialCameraPosition(cameraSettings: CameraSettings): void {\r\n        if (!cameraSettings) return;\r\n\r\n        ['x', 'y', 'z'].forEach(axis => {\r\n            this.camera.position[axis] = cameraSettings.cameraPosition[axis];\r\n            this.controls.target[axis] = cameraSettings.controlsTarget[axis];\r\n        });\r\n    }\r\n\r\n    private subscribeOnCameraMovement(): void {\r\n        fromEvent(this.controls, 'change')\r\n            .pipe(skip(1), debounceTime(250))\r\n            .subscribe(() => {\r\n                const { position } = this.camera;\r\n                const { target } = this.controls;\r\n\r\n                this.store.dispatch(new CameraSettingsActions.SetCameraPostion({ x: position.x, y: position.y, z: position.z }));\r\n                this.store.dispatch(new CameraSettingsActions.SetControlsTarget({ x: target.x, y: target.y, z: target.z }));\r\n            });\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class FontProviderService {\r\n    public isLoaded = new BehaviorSubject<boolean>(false);\r\n    private latoLightRegular: THREE.Font;\r\n    private loader = new THREE.FontLoader();\r\n\r\n    constructor() {\r\n        this.loader.load('assets/fonts/Lato_Light_Regular.json', font => {\r\n            this.latoLightRegular = font;\r\n            this.isLoaded.next(true);\r\n        });\r\n    }\r\n\r\n    public getLatoLightRegular(): THREE.Font {\r\n        if (!this.latoLightRegular) throw Error('The font is not loaded!');\r\n\r\n        return this.latoLightRegular;\r\n    }\r\n}\r\n","import * as THREE from 'three';\r\nimport { Injectable } from '@angular/core';\r\nimport { EngineService } from './engine.service';\r\nimport { IElevator } from '../shared/Elevator/elevator.model';\r\nimport Elevator from '../shared/classes/elevator.class';\r\nimport { FontProviderService } from './font-provider.service';\r\nimport elevatorManagerSettings from 'app/constants/elevator-manager-settings.constants';\r\n\r\nconst angle90: number = 1.5707963267948966;\r\n\r\n// function rotateObject(object, degreeX=0, degreeY=0, degreeZ=0) {\r\n//     object.rotateX(THREE.Math.degToRad(degreeX));\r\n//     object.rotateY(THREE.Math.degToRad(degreeY));\r\n//     object.rotateZ(THREE.Math.degToRad(degreeZ));\r\n//  }\r\n@Injectable({ providedIn: 'root' })\r\nexport class ObjectManagerService {\r\n    public defaultColor = new THREE.Color('rgb(0, 0, 255)');\r\n\r\n    constructor(private engine: EngineService, private fontProvider: FontProviderService) {}\r\n\r\n    public createCube(geometry: THREE.BoxGeometry = new THREE.BoxGeometry(1, 1, 1)): THREE.Mesh {\r\n        const cube = new THREE.Mesh(geometry);\r\n        (<any>cube.material).color.set(this.defaultColor);\r\n        (<any>cube.material).opacity = 0.3;\r\n\r\n        return cube;\r\n    }\r\n\r\n    public createGrid(\r\n        size: number,\r\n        division: number,\r\n        centerLineColor = new THREE.Color(0x000000),\r\n        otherLineColor = new THREE.Color(0x000000)\r\n    ): THREE.GridHelper {\r\n        const grid = new THREE.GridHelper(size, division, centerLineColor, otherLineColor);\r\n        (<any>grid.material).transparent = false;\r\n\r\n        return grid;\r\n    }\r\n\r\n    public createElevatorConfiguration(elevatorConfig: IElevator): Elevator {\r\n        return new Elevator(elevatorConfig);\r\n    }\r\n\r\n    public buildElevatorObject(elevator: Elevator, allElevators: number): THREE.Object3D {\r\n        const object = new THREE.Object3D();\r\n        const elevatorSelf = new THREE.Object3D();\r\n\r\n        elevator.id = object.id;\r\n        object.userData = { isElevatorParent: true };\r\n        object.name = `elevator${allElevators}`;\r\n        object.add(...this.getFloorPlatforms(elevator));\r\n        elevatorSelf.name = 'elevatorSelf';\r\n        elevatorSelf.add(...this.getSkeletGeometry(elevator));\r\n        elevatorSelf.add(this.getElevatorTitle(allElevators));\r\n        elevatorSelf.position.y = elevatorManagerSettings.defaultElevator.floorHeight * elevator.currentFloor;\r\n        object.add(elevatorSelf);\r\n        object.translateX(allElevators * elevatorManagerSettings.distanceBetweenElevators);\r\n\r\n        const pane = object.getObjectByName(`floorPane${elevator.currentFloor}`);\r\n        const text = pane.getObjectByName('floorText');\r\n\r\n        (<any>pane).material.color.set(elevatorManagerSettings.defaultElevator.floorColorArrived);\r\n        (<any>text).material.color.set(elevatorManagerSettings.defaultElevator.floorTextArrived);\r\n        this.addToScene(object);\r\n\r\n        console.log('object', object);\r\n\r\n        return object;\r\n    }\r\n\r\n    public highlightSelectedElevator(elevatorId: number): void {\r\n        const object = this.getObjectById(elevatorId);\r\n        const clone = object.clone();\r\n        // to avoid bug with highlight shift\r\n        ['x', 'y', 'z'].forEach(axes => clone.position[axes] = 0);\r\n        const helper = new THREE.BoxHelper(clone);\r\n\r\n        helper.geometry.scale(1.1, 1, 1.1);\r\n        helper.name = 'highlight-selection';\r\n        object.add(helper);\r\n    }\r\n\r\n    public deHighlightSelectedElevator(elevatorId: number): void {\r\n        const object = this.getObjectById(elevatorId);\r\n\r\n        object.remove(object.getObjectByName('highlight-selection'));\r\n    }\r\n\r\n    public addToScene(object: any): void {\r\n        this.engine.addToScene(object);\r\n    }\r\n\r\n    public removeObject(object: any): void {\r\n        this.engine.removeFromScene(object);\r\n    }\r\n\r\n    public getObjectById(id: number): THREE.Object3D {\r\n        return this.engine.getObjectById(id);\r\n    }\r\n\r\n    public getObjectByName(name: string): THREE.Object3D {\r\n        return this.engine.getObjectByName(name);\r\n    }\r\n\r\n    public getElevatorTitle(elevatorTitle: number | string): THREE.Mesh {\r\n        const elevatorTitleMesh = this.createFloorNumber(`Elevator ${elevatorTitle}`, 'crimson');\r\n\r\n        elevatorTitleMesh.translateY(elevatorManagerSettings.defaultElevator.height);\r\n        elevatorTitleMesh.translateX(-elevatorManagerSettings.defaultElevator.width / 2);\r\n        elevatorTitleMesh.translateZ(elevatorManagerSettings.defaultElevator.length / 2);\r\n        elevatorTitleMesh.name = 'elevator-title';\r\n\r\n        return elevatorTitleMesh;\r\n    }\r\n\r\n    public getFloorPlatforms(elevator: Elevator, font: THREE.Font = this.fontProvider.getLatoLightRegular()): THREE.Mesh[] {\r\n        const geometry = [];\r\n\r\n        for (let i = 0; i < elevator.coveredFloors; i++) geometry.push(this.createFloor(elevator, i, font));\r\n\r\n        return geometry;\r\n    }\r\n\r\n    public createFloor(elevator: Elevator, floorNumber: number, font: THREE.Font = this.fontProvider.getLatoLightRegular()): THREE.Mesh {\r\n        const planeGeometry = new THREE.PlaneGeometry(\r\n            elevatorManagerSettings.defaultElevator.floorLength,\r\n            elevatorManagerSettings.defaultElevator.floorWidth\r\n        );\r\n        const material = new THREE.MeshBasicMaterial({\r\n            color: elevatorManagerSettings.defaultElevator.floorColor,\r\n            side: THREE.DoubleSide,\r\n            opacity: elevatorManagerSettings.defaultElevator.floorOpacity,\r\n            transparent: true\r\n        });\r\n        const floor = new THREE.Mesh(planeGeometry, material);\r\n\r\n        floor.rotateX(-angle90);\r\n        floor.translateZ(floorNumber * elevatorManagerSettings.defaultElevator.floorHeight);\r\n        floor.translateY(-(elevatorManagerSettings.defaultElevator.floorWidth + elevator.width) / 2);\r\n\r\n        const floorNumberMesh = this.createFloorNumber(`Floor ${floorNumber}`, elevatorManagerSettings.defaultElevator.floorText, font);\r\n\r\n        floorNumberMesh.translateY(-elevatorManagerSettings.defaultElevator.floorWidth / 2);\r\n        floorNumberMesh.translateX(-elevatorManagerSettings.defaultElevator.floorWidth / 2);\r\n        floorNumberMesh.rotateX(angle90);\r\n        floorNumberMesh.name = 'floorText';\r\n        floor.add(floorNumberMesh);\r\n        floor.name = `floorPane${floorNumber}`;\r\n\r\n        return floor;\r\n    }\r\n\r\n    public createWireframe(elevator: Elevator, object: THREE.Mesh | THREE.Object3D, name: string = 'wireframe'): void {\r\n        const edges = new THREE.EdgesGeometry((<any>object).geometry);\r\n        const line = new THREE.LineSegments(edges, new THREE.LineBasicMaterial({ color: elevator.wireframes.color }));\r\n\r\n        line.name = name;\r\n        object.add(line);\r\n    }\r\n\r\n    private createFloorNumber(title: string, color: string, font: THREE.Font = this.fontProvider.getLatoLightRegular()): THREE.Mesh {\r\n        const geometry = new THREE.TextGeometry(title, {\r\n            font,\r\n            size: 2,\r\n            height: 0\r\n        });\r\n\r\n        return new THREE.Mesh(geometry, new THREE.MeshBasicMaterial({ color }));\r\n    }\r\n\r\n    private getSkeletGeometry(elevator: Elevator): (THREE.LineSegments | THREE.Mesh)[] {\r\n        const geometry = [];\r\n        const floor = this.createPane(elevator, 'floor', false);\r\n        const ceiling = this.createPane(elevator, 'ceiling', false);\r\n        const wallLeft = this.createPane(elevator, 'wall');\r\n        const wallRight = this.createPane(elevator, 'wall');\r\n        const wallBack = this.createPane(elevator, 'wall');\r\n        const doorR = this.createPane(elevator, 'door-right');\r\n        const doorL = this.createPane(elevator, 'door-left');\r\n\r\n        floor.rotateX(angle90);\r\n        ceiling.rotateX(angle90);\r\n        ceiling.translateZ(-elevator.height);\r\n        wallLeft.translateZ(-elevator.length / 2);\r\n        wallRight.translateZ(elevator.length / 2);\r\n        wallBack.rotateY(-angle90);\r\n        wallBack.translateZ(-elevator.length / 2);\r\n        doorR.rotateY(angle90);\r\n        doorR.translateZ(-elevator.length / 2);\r\n        doorR.geometry.scale(0.5, 1, 1);\r\n        doorR.translateX(elevator.length / 4);\r\n        doorL.rotateY(angle90);\r\n        doorL.translateZ(-elevator.length / 2);\r\n        doorL.geometry.scale(0.5, 1, 1);\r\n        doorL.translateX(-elevator.length / 4);\r\n\r\n        geometry.push(floor, ceiling, wallLeft, wallRight, wallBack, doorR, doorL);\r\n\r\n        if (elevator.wireframes.isWireframesShowed) geometry.forEach(element => this.createWireframe(elevator, element));\r\n\r\n        return geometry;\r\n    }\r\n\r\n    private createPane(elevator: Elevator, name: string, isWall: boolean = true): THREE.Mesh {\r\n        const geometry = isWall\r\n            ? new THREE.PlaneGeometry(elevator.length, elevator.height)\r\n            : new THREE.PlaneGeometry(elevator.length, elevator.width);\r\n        const material = new THREE.MeshBasicMaterial({\r\n            color: elevator.wallColor,\r\n            side: THREE.DoubleSide,\r\n            opacity: elevator.wallOpacity,\r\n            transparent: elevator.wallTransparent\r\n        });\r\n        const pane = new THREE.Mesh(geometry, material);\r\n\r\n        if (isWall) {\r\n            pane.translateY(elevator.height / 2);\r\n            pane.rotateY(angle90);\r\n        }\r\n        pane.name = name;\r\n\r\n        return pane;\r\n    }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'app/redux/root-interface';\r\nimport { ElevatorAnimationManagerService } from 'app/services/elevator-animation-manager.service';\r\nimport { ObjectManagerService } from 'app/services/object-manager.service';\r\nimport Elevator from 'app/shared/classes/elevator.class';\r\n\r\n@Component({\r\n    selector: 'animation-player',\r\n    templateUrl: './animation-player.component.html',\r\n    styleUrls: ['./animation-player.component.less']\r\n})\r\nexport class AnimationPlayerComponent implements OnInit, OnDestroy {\r\n    private tooltipPosition: string = 'right';\r\n    private allElevators: Elevator[];\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    public isInPause: boolean = true;\r\n\r\n    constructor(\r\n        private store: Store<AppState>,\r\n        private objectManager: ObjectManagerService,\r\n        private animationService: ElevatorAnimationManagerService\r\n    ) {}\r\n\r\n    public ngOnInit(): void {\r\n        this.subscriptions.push(\r\n            this.store.select(state => state.settingsPanel.formPosition).subscribe(position => this.tooltipPosition = position),\r\n            this.store.select(state => state.elevatorManagerSettings.elevators).subscribe(elevators => this.allElevators = elevators)\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public getTooltipPosition(): string {\r\n        return this.tooltipPosition === 'left' ? 'top' : 'right';\r\n    }\r\n\r\n    public onPlay(): void {\r\n        // TODO: continue from here\r\n        // elevators without passengers who is already on its floor\r\n        // const elevatorsWO = this.allElevators.map(elevator => {\r\n        //     const supportedFloors = elevator.supportedFloors.map((floor, index) => {\r\n        //         const passengers = floor.passengers.filter(passenger => passenger.destinationFloor !== index);\r\n        //         return { ...floor, passengers };\r\n        //     });\r\n        //     return { ...elevator, supportedFloors };\r\n        // });\r\n\r\n        // const dummyElevators = elevatorsWO.filter(elevator => !elevator.isSmart);\r\n        // const smartElevators = elevatorsWO.filter(elevator => elevator.isSmart);\r\n\r\n        this.animationService.start(\r\n            this.objectManager.getObjectById(this.allElevators[0].id).getObjectByName('elevatorSelf'),\r\n            this.allElevators[0].speed\r\n        );\r\n        this.isInPause = false;\r\n    }\r\n\r\n    public onPause(): void {\r\n        this.animationService.pause();\r\n        this.isInPause = true;\r\n    }\r\n}\r\n","\r\n<button *ngIf=\"isInPause; else pauseBtn\"\r\n    kendoButton\r\n    kendoTooltip\r\n    title=\"Play\"\r\n    iconClass=\"k-icon k-i-play\"\r\n    [position]=\"getTooltipPosition()\"\r\n    (click)=\"onPlay()\">\r\n</button>\r\n<ng-template #pauseBtn>\r\n    <button kendoButton\r\n        kendoTooltip\r\n        title=\"Pause\"\r\n        iconClass=\"k-icon k-i-pause\"\r\n        [position]=\"getTooltipPosition()\"\r\n        (click)=\"onPause()\">\r\n    </button>\r\n</ng-template>\r\n","import * as THREE from 'three';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'app/redux/root-interface';\r\nimport ElevatorManagerSettingsActions from 'app/redux/elevator-manager-settings/elevator-manager-settings.actions';\r\nimport elevatorManagerSettings from 'app/constants/elevator-manager-settings.constants';\r\nimport Elevator from 'app/shared/classes/elevator.class';\r\nimport { IElevator } from 'app/shared/Elevator/elevator.model';\r\nimport { ObjectManagerService } from 'app/services/object-manager.service';\r\nimport { ResetKeys } from './reset-keys.model';\r\nimport Floor from 'app/shared/classes/floor.class';\r\nimport Passenger from 'app/shared/classes/passenger.class';\r\n\r\n@Component({\r\n    selector: 'elevators-manager',\r\n    templateUrl: './elevators-manager.component.html',\r\n    styleUrls: ['./elevators-manager.component.less']\r\n})\r\nexport class ElevatorsManagerComponent implements OnInit, OnDestroy {\r\n    private tooltipPosition: string = 'right';\r\n    private subscriptions: Subscription[] = [];\r\n    private allElevators: Elevator[];\r\n\r\n    public elevatorObject: THREE.Object3D;\r\n    public selectedElevator: Elevator;\r\n    public wallColor: THREE.Color;\r\n    public wallOpacity: number;\r\n    public wallTransparent: boolean;\r\n    public elevatorCapacity: number;\r\n    public elevatorSpeed: number;\r\n    public elevatorCoveredFloors: number;\r\n    public elevatorCurrentFloor: number;\r\n    public isWireframesShowed: boolean;\r\n    public wireframesColor: THREE.Color;\r\n\r\n    constructor(private store: Store<AppState>, private objectManager: ObjectManagerService, private changeDetector: ChangeDetectorRef) {\r\n        // TODO: remove the example\r\n        // setInterval(() => {\r\n        //     const pane = this.elevatorObject.getObjectByName('floorPane0');\r\n        //     const text = pane.children[0];\r\n        //     console.log('text', text);\r\n        //     const color = new THREE.Color(Math.random() * 0xffffff);\r\n        //     const newColor: any = '#' + color.getHexString();\r\n        //     (<any>text).material.color.set(newColor);\r\n        // }, 2000);\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this.subscriptions.push(\r\n            this.store.select(state => state.settingsPanel.formPosition).subscribe(position => this.tooltipPosition = position),\r\n            this.store.select(state => state.elevatorManagerSettings.defaultElevator.wallColor).subscribe(color => this.wallColor = color),\r\n            this.store.select(state => state.elevatorManagerSettings.defaultElevator.wallOpacity).subscribe(opacity => this.wallOpacity = opacity),\r\n            this.store\r\n                .select(state => state.elevatorManagerSettings.defaultElevator.wallTransparent)\r\n                .subscribe(value => this.wallTransparent = value),\r\n            this.store\r\n                .select(state => state.elevatorManagerSettings.defaultElevator.capacity)\r\n                .subscribe(capacity => this.elevatorCapacity = capacity),\r\n            this.store.select(state => state.elevatorManagerSettings.defaultElevator.speed).subscribe(speed => this.elevatorSpeed = speed),\r\n            this.store\r\n                .select(state => state.elevatorManagerSettings.defaultElevator.coveredFloors)\r\n                .subscribe(coveredFloors => this.elevatorCoveredFloors = coveredFloors),\r\n            this.store\r\n                .select(state => state.elevatorManagerSettings.defaultElevator.currentFloor)\r\n                .subscribe(floor => this.elevatorCurrentFloor = floor),\r\n            this.store\r\n                .select(state => state.elevatorManagerSettings.wireframes.isWireframesShowed)\r\n                .subscribe(isWireframesShowed => this.isWireframesShowed = isWireframesShowed),\r\n            this.store.select(state => state.elevatorManagerSettings.wireframes.color).subscribe(color => this.wireframesColor = color),\r\n            this.store.select(state => state.elevatorManagerSettings.elevators).subscribe(elevators => this.allElevators = elevators),\r\n            this.store\r\n                .select(state => state.elevatorManagerSettings.selectedElevator)\r\n                .subscribe(elevator => {\r\n                    this.changeDetector.markForCheck(); // yes, this needed\r\n                    this.selectedElevator = elevator;\r\n\r\n                    if (!elevator) {\r\n                        this.elevatorObject = null;\r\n                        return;\r\n                    }\r\n\r\n                    this.wallTransparent = elevator.wallTransparent;\r\n                    this.elevatorObject = this.objectManager.getObjectById(this.selectedElevator.id);\r\n                })\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public getTooltipPosition(): string {\r\n        return this.tooltipPosition === 'left' ? 'right' : 'top';\r\n    }\r\n\r\n    public onAddElevator(): void {\r\n        const elevatorConfig = this.getElevatorConfiguration();\r\n        const elevator = this.objectManager.createElevatorConfiguration(elevatorConfig);\r\n\r\n        this.objectManager.buildElevatorObject(elevator, this.allElevators.length);\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.AddNewElevator(elevator));\r\n    }\r\n\r\n    public onDeleteElevator(): void {\r\n        if (!this.selectedElevator) return;\r\n\r\n        const removedIndex = this.allElevators.findIndex(elevator => this.selectedElevator.id === elevator.id);\r\n        for (let i = removedIndex + 1, len = this.allElevators.length; i < len; i++) {\r\n            this.objectManager.getObjectById(this.allElevators[i].id).translateX(-elevatorManagerSettings.distanceBetweenElevators);\r\n        }\r\n        const removedElevatorId = this.allElevators.find(elevator => this.selectedElevator.id === elevator.id).id;\r\n        const filteredList = this.allElevators.filter(elevator => elevator.id !== removedElevatorId);\r\n        this.objectManager.removeObject(this.objectManager.getObjectById(removedElevatorId));\r\n        this.staticDispatch(null, filteredList);\r\n        this.renameAllElevators(filteredList);\r\n    }\r\n\r\n    public onWallColorChange(color: THREE.Color): void {\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetElevatorWallColor(color));\r\n\r\n        if (!this.selectedElevator) return;\r\n        this.getWallObjects().forEach((element: THREE.Object3D) => (<any>element).material.color.set(color));\r\n        this.staticDispatch(...this.getModifiedElevators('wallColor', color));\r\n    }\r\n\r\n    public onGetRandomColor(): void {\r\n        const color = new THREE.Color(Math.random() * 0xffffff);\r\n        const newColor: any = '#' + color.getHexString();\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetElevatorWallColor(newColor));\r\n\r\n        if (!this.selectedElevator) return;\r\n        this.getWallObjects().forEach((element: THREE.Object3D) => (<any>element).material.color.set(newColor));\r\n        this.staticDispatch(...this.getModifiedElevators('wallColor', newColor));\r\n    }\r\n\r\n    public onWallOpacityChange(opacity: number): void {\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetElevatorWallOpacity(opacity));\r\n\r\n        if (!this.selectedElevator) return;\r\n        this.getWallObjects().forEach((element: THREE.Object3D) => (<any>element).material.opacity = opacity);\r\n        this.staticDispatch(...this.getModifiedElevators('wallOpacity', opacity));\r\n    }\r\n\r\n    public onWallTransparentChange(): void {\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetElevatorWallTransparent(this.wallTransparent));\r\n\r\n        if (!this.selectedElevator) return;\r\n        this.getWallObjects().forEach((element: THREE.Object3D) => (<any>element).material.transparent = this.wallTransparent);\r\n        this.staticDispatch(...this.getModifiedElevators('wallTransparent', this.wallTransparent));\r\n    }\r\n\r\n    public onElevatorCapacityChange(capacity: number): void {\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetElevatorCapacity(capacity));\r\n\r\n        if (!this.selectedElevator) return;\r\n        this.staticDispatch(...this.getModifiedElevators('capacity', capacity));\r\n    }\r\n\r\n    public onElevatorSpeedChange(speed: number): void {\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetElevatorSpeed(speed));\r\n\r\n        if (!this.selectedElevator) return;\r\n        this.staticDispatch(...this.getModifiedElevators('speed', speed));\r\n    }\r\n\r\n    public onElevatorCoveredFloorsChange(coveredFloors: number): void {\r\n        if (coveredFloors < 2) coveredFloors = 2;\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetElevatorCoveredFloors(coveredFloors));\r\n\r\n        if (!this.selectedElevator) return;\r\n        if (this.selectedElevator.coveredFloors > coveredFloors) {\r\n            for (let i = this.selectedElevator.coveredFloors - 1; i >= coveredFloors; i--)\r\n                this.elevatorObject.remove(this.elevatorObject.getObjectByName(`floorPane${i}`));\r\n            if (this.selectedElevator.currentFloor >= coveredFloors) this.changeElevatorPosition(coveredFloors - 1);\r\n        } else {\r\n            for (let i = this.selectedElevator.coveredFloors; i < coveredFloors; i++)\r\n                this.elevatorObject.add(this.objectManager.createFloor(this.selectedElevator, i));\r\n        }\r\n        this.objectManager.deHighlightSelectedElevator(this.selectedElevator.id);\r\n        this.objectManager.highlightSelectedElevator(this.selectedElevator.id);\r\n\r\n        const modifiedElevator = {\r\n            ...this.selectedElevator,\r\n            coveredFloors,\r\n            supportedFloors:\r\n                this.selectedElevator.coveredFloors > coveredFloors\r\n                    ? this.selectedElevator.supportedFloors.slice(0, coveredFloors)\r\n                    : this.selectedElevator.supportedFloors.concat(new Floor()),\r\n            currentFloor: this.selectedElevator.currentFloor >= coveredFloors ? coveredFloors - 1 : this.selectedElevator.currentFloor\r\n        };\r\n        modifiedElevator.supportedFloors = modifiedElevator.supportedFloors.map(floor => {\r\n            const passengers = floor.passengers.map(passenger =>\r\n                passenger.destinationFloor >= coveredFloors ? new Passenger(passenger.currentFloor, coveredFloors - 1) : passenger\r\n            );\r\n\r\n            return new Floor(passengers);\r\n        });\r\n        const idx = this.allElevators.findIndex(item => modifiedElevator.id === item.id);\r\n        const modifiedAllElevators = [...this.allElevators];\r\n        modifiedAllElevators[idx] = modifiedElevator;\r\n\r\n        this.staticDispatch(modifiedElevator, modifiedAllElevators);\r\n    }\r\n\r\n    public onElevatorCurrentFloorChange(floor: number): void {\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetElevatorCurrentFloor(floor));\r\n\r\n        if (!this.selectedElevator) return;\r\n        this.changeElevatorPosition(floor);\r\n        this.staticDispatch(...this.getModifiedElevators('currentFloor', floor));\r\n    }\r\n\r\n    private getElevatorConfiguration(): IElevator {\r\n        return {\r\n            capacity: this.selectedElevator?.capacity || this.elevatorCapacity,\r\n            coveredFloors: this.selectedElevator?.coveredFloors || this.elevatorCoveredFloors,\r\n            currentFloor: this.selectedElevator?.currentFloor || this.elevatorCurrentFloor,\r\n            speed: this.selectedElevator?.speed || this.elevatorSpeed,\r\n            wallColor: this.selectedElevator?.wallColor || this.wallColor,\r\n            wallOpacity: this.selectedElevator?.wallOpacity || this.wallOpacity,\r\n            wallTransparent: this.selectedElevator?.wallTransparent || this.wallTransparent,\r\n            wireframes: {\r\n                isWireframesShowed: this.selectedElevator?.wireframes?.isWireframesShowed || this.isWireframesShowed,\r\n                color: this.selectedElevator?.wireframes?.color || this.wireframesColor\r\n            }\r\n        };\r\n    }\r\n\r\n    public onResetAllSettings(key: number): void {\r\n        switch (key) {\r\n            case ResetKeys.TAB_ELEVATORS_PLUS_SETTINGS:\r\n                this.allElevators.forEach(elevator => this.objectManager.removeObject(this.objectManager.getObjectById(elevator.id)));\r\n                this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(null));\r\n                this.store.dispatch(new ElevatorManagerSettingsActions.ResetAllSettings());\r\n                break;\r\n            // TODO: maybe delete it later\r\n            // case ResetKeys.TAB_SETTINGS:\r\n            //     const savedElevators = [...this.allElevators];\r\n            //     this.store.dispatch(new ElevatorManagerSettingsActions.ResetAllSettings());\r\n            //     this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators(savedElevators));\r\n            //     break;\r\n            case ResetKeys.TAB_ELEVATORS:\r\n                this.allElevators.forEach(elevator => this.objectManager.removeObject(this.objectManager.getObjectById(elevator.id)));\r\n                this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators([]));\r\n                this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(null));\r\n                break;\r\n        }\r\n    }\r\n\r\n    private getWallObjects(): THREE.Object3D[] {\r\n        const elevatorSelf = this.elevatorObject.getObjectByName('elevatorSelf');\r\n        const walls = elevatorSelf.children.filter(element => element.name === 'wall');\r\n\r\n        walls.push(elevatorSelf.children.find(element => element.name === 'floor'));\r\n        walls.push(elevatorSelf.children.find(element => element.name === 'ceiling'));\r\n        walls.push(elevatorSelf.children.find(element => element.name === 'door-right'));\r\n        walls.push(elevatorSelf.children.find(element => element.name === 'door-left'));\r\n\r\n        return walls;\r\n    }\r\n\r\n    private getModifiedElevators(\r\n        property: string,\r\n        value: any,\r\n        selectedElevator: Elevator = this.selectedElevator,\r\n        allElevators: Elevator[] = this.allElevators\r\n    ): [Elevator, Elevator[]] {\r\n        const modifiedElevator = { ...selectedElevator, [property]: value } as Elevator;\r\n        const idx = allElevators.findIndex(item => modifiedElevator.id === item.id);\r\n        const modifiedAllElevators = [...allElevators];\r\n        modifiedAllElevators[idx] = modifiedElevator;\r\n\r\n        return [modifiedElevator, modifiedAllElevators];\r\n    }\r\n\r\n    private staticDispatch(elevator: Elevator, allElevators: Elevator[]): void {\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(elevator));\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators(allElevators));\r\n    }\r\n\r\n    private renameAllElevators(allElevators: Elevator[]): void {\r\n        allElevators.forEach((elevator, index) => {\r\n            const elevatorObj = this.objectManager.getObjectById(elevator.id);\r\n\r\n            elevatorObj.name = `elevator${index}`;\r\n            elevatorObj.remove(elevatorObj.getObjectByName('elevator-title'));\r\n            elevatorObj.add(this.objectManager.getElevatorTitle(index));\r\n        });\r\n    }\r\n\r\n    private changeElevatorPosition(floor: number): void {\r\n        const elevator = this.elevatorObject.getObjectByName('elevatorSelf');\r\n        const paneCurr = this.elevatorObject.getObjectByName(`floorPane${floor}`);\r\n        const textCurr = paneCurr.getObjectByName('floorText');\r\n        const panePrev = this.elevatorObject.getObjectByName(`floorPane${this.selectedElevator.currentFloor}`);\r\n\r\n        elevator.position.y = elevatorManagerSettings.defaultElevator.floorHeight * floor;\r\n        (<any>paneCurr).material.color.set(elevatorManagerSettings.defaultElevator.floorColorArrived);\r\n        (<any>textCurr).material.color.set(elevatorManagerSettings.defaultElevator.floorTextArrived);\r\n\r\n        if (!panePrev) return;\r\n\r\n        const textPrev = panePrev.getObjectByName('floorText');\r\n        (<any>panePrev).material.color.set(elevatorManagerSettings.defaultElevator.floorColor);\r\n        (<any>textPrev).material.color.set(elevatorManagerSettings.defaultElevator.floorText);\r\n    }\r\n}\r\n","<h2 class=\"option-title\">\n    <button kendoButton\n        kendoTooltip\n        title=\"Remove Elevator\"\n        class=\"delete-elevator-button\"\n        iconClass=\"k-icon k-i-minus\"\n        [disabled]=\"!selectedElevator\"\n        [position]=\"getTooltipPosition()\"\n        (click)=\"onDeleteElevator()\">\n    </button>\n    {{ elevatorObject?.name || 'Elevator manager'}}\n    <button kendoButton\n        kendoTooltip\n        title=\"Add Elevator\"\n        class=\"add-elevator-button\"\n        iconClass=\"k-icon k-i-plus\"\n        [position]=\"getTooltipPosition()\"\n        (click)=\"onAddElevator()\">\n    </button>\n</h2>\n<section class=\"option-line\">\n    <span>Wall Color:</span>\n    <div>\n        <kendo-colorpicker [value]=\"selectedElevator?.wallColor || wallColor\"\n            [format]=\"'hex'\"\n            [gradientSettings]=\"{opacity: false}\"\n            (valueChange)=\"onWallColorChange($event)\">\n        </kendo-colorpicker>\n        <button kendoButton\n            kendoTooltip\n            title=\"Random color\"\n            iconClass=\"k-icon k-i-kpi-status-open\"\n            [position]=\"getTooltipPosition()\"\n            (click)=\"onGetRandomColor()\">\n        </button>\n    </div>\n</section>\n<section class=\"option-line\">\n    <span>Wall Opacity:</span>\n    <div>\n        <kendo-numerictextbox class=\"numerictext-component\"\n            [value]=\"selectedElevator?.wallOpacity || wallOpacity\"\n            [min]=\"0\"\n            [max]=\"1\"\n            [step]=\"0.05\"\n            [decimals]=\"2\"\n            [format]=\"'n2'\"\n            [autoCorrect]=\"true\"\n            (valueChange)=\"onWallOpacityChange($event)\">\n        </kendo-numerictextbox>\n    </div>\n</section>\n<section class=\"option-line\">\n    <span>Wall Transparent:</span>\n    <div>\n        <kendo-switch class=\"component-switch\"\n            [(ngModel)]=\"wallTransparent\"\n            (valueChange)=\"onWallTransparentChange()\">\n        </kendo-switch>\n    </div>\n</section>\n\n<wireframes-settings></wireframes-settings>\n\n<section class=\"option-line\">\n    <span>Elevator Capacity:</span>\n    <div>\n        <kendo-numerictextbox class=\"numerictext-component\"\n            [value]=\"selectedElevator?.capacity || elevatorCapacity\"\n            [min]=\"0\"\n            [max]=\"100\"\n            [step]=\"1\"\n            [decimals]=\"0\"\n            [format]=\"'n0'\"\n            [autoCorrect]=\"true\"\n            (valueChange)=\"onElevatorCapacityChange($event)\">\n        </kendo-numerictextbox>\n    </div>\n</section>\n<section class=\"option-line\">\n    <span>Elevator Speed(sec/floor):</span>\n    <div>\n        <kendo-numerictextbox class=\"numerictext-component\"\n            [value]=\"selectedElevator?.speed || elevatorSpeed\"\n            [min]=\"0.01\"\n            [max]=\"50\"\n            [step]=\"0.05\"\n            [decimals]=\"2\"\n            [format]=\"'n2'\"\n            [autoCorrect]=\"true\"\n            (valueChange)=\"onElevatorSpeedChange($event)\">\n        </kendo-numerictextbox>\n    </div>\n</section>\n<section class=\"option-line\">\n    <span>Covered Floors:</span>\n    <div>\n        <kendo-numerictextbox class=\"numerictext-component\"\n            [value]=\"selectedElevator?.coveredFloors || elevatorCoveredFloors\"\n            [min]=\"2\"\n            [max]=\"101\"\n            [step]=\"1\"\n            [decimals]=\"0\"\n            [format]=\"'n0'\"\n            [autoCorrect]=\"true\"\n            (valueChange)=\"onElevatorCoveredFloorsChange($event)\">\n        </kendo-numerictextbox>\n    </div>\n</section>\n<section class=\"option-line\">\n    <span>Current Floor:</span>\n    <div>\n        <kendo-numerictextbox class=\"numerictext-component\"\n            [value]=\"selectedElevator?.currentFloor ?? elevatorCurrentFloor\"\n            [min]=\"0\"\n            [max]=\"(selectedElevator?.coveredFloors ?? elevatorCoveredFloors) - 1\"\n            [step]=\"1\"\n            [decimals]=\"0\"\n            [format]=\"'n0'\"\n            [autoCorrect]=\"true\"\n            (valueChange)=\"onElevatorCurrentFloorChange($event)\">\n        </kendo-numerictextbox>\n    </div>\n</section>\n<section class=\"option-line\">\n    <span>Reset:</span>\n    <div>\n        <button kendoButton\n            kendoTooltip\n            title=\"Reset tab settings and all elevators\"\n            iconClass=\"k-icon k-i-reload\"\n            [position]=\"getTooltipPosition()\"\n            (click)=\"onResetAllSettings(0)\">\n        </button>\n         <!-- TODO: maybe delete it later -->\n        <!-- <button kendoButton\n            kendoTooltip\n            title=\"Reset, but save elevators\"\n            iconClass=\"k-icon k-i-reload\"\n            [position]=\"getTooltipPosition()\"\n            (click)=\"onResetAllSettings(1)\">!\n        </button> -->\n        <button kendoButton\n            kendoTooltip\n            title=\"Remove only elevators\"\n            iconClass=\"k-icon k-i-reload\"\n            [position]=\"getTooltipPosition()\"\n            (click)=\"onResetAllSettings(2)\">!\n        </button>\n    </div>\n</section>\n","export enum ResetKeys {\r\n    TAB_ELEVATORS_PLUS_SETTINGS,\r\n    TAB_SETTINGS,\r\n    TAB_ELEVATORS\r\n}\r\n","import * as THREE from 'three';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'app/redux/root-interface';\r\nimport Elevator from 'app/shared/classes/elevator.class';\r\nimport ElevatorManagerSettingsActions from 'app/redux/elevator-manager-settings/elevator-manager-settings.actions';\r\nimport { ObjectManagerService } from 'app/services/object-manager.service';\r\n\r\n@Component({\r\n    selector: 'wireframes-settings',\r\n    templateUrl: './wireframes-settings.component.html',\r\n    styleUrls: ['./wireframes-settings.component.less']\r\n})\r\nexport class WireframesSettingsComponent implements OnInit {\r\n    private tooltipPosition: string = 'right';\r\n    private subscriptions: Subscription[] = [];\r\n    private elevatorObject: THREE.Object3D;\r\n    private allElevators: Elevator[];\r\n\r\n    public wireframesSettingsExpanded: boolean;\r\n    public isWireframesShowed: boolean;\r\n    public wireframesColor: THREE.Color;\r\n    public selectedElevator: Elevator;\r\n\r\n    constructor(private store: Store<AppState>, private objectManager: ObjectManagerService) {}\r\n\r\n    public ngOnInit(): void {\r\n        this.subscriptions.push(\r\n            this.store\r\n                .select(state => state.elevatorManagerSettings.wireframes.wireframesSettingsExpanded)\r\n                .subscribe(expanded => this.wireframesSettingsExpanded = expanded),\r\n            this.store\r\n                .select(state => state.elevatorManagerSettings.wireframes.isWireframesShowed)\r\n                .subscribe(isWireframesShowed => this.isWireframesShowed = isWireframesShowed),\r\n            this.store.select(state => state.elevatorManagerSettings.wireframes.color).subscribe(color => this.wireframesColor = color),\r\n            this.store.select(state => state.elevatorManagerSettings.elevators).subscribe(elevators => this.allElevators = elevators),\r\n            this.store\r\n                .select(state => state.elevatorManagerSettings.selectedElevator)\r\n                .subscribe(elevator => {\r\n                    this.selectedElevator = elevator;\r\n\r\n                    if (!elevator) {\r\n                        this.elevatorObject = null;\r\n                        return;\r\n                    }\r\n\r\n                    this.isWireframesShowed = elevator.wireframes.isWireframesShowed;\r\n                    this.elevatorObject = this.objectManager.getObjectById(this.selectedElevator.id);\r\n                })\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public getTooltipPosition(): string {\r\n        return this.tooltipPosition === 'left' ? 'right' : 'top';\r\n    }\r\n\r\n    public onWireframesSettingsExpanded(event: Event): void {\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetWireframesExpand(event[0].expanded));\r\n    }\r\n\r\n    public onShowWireframeChange(event: Event): void {\r\n        event.stopPropagation();\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetWireframesShowed(this.isWireframesShowed));\r\n\r\n        if (!this.selectedElevator) return;\r\n        const [modifiedElevator, modifiedAllElevators] = this.getModifiedElevators('isWireframesShowed', this.isWireframesShowed);\r\n        this.isWireframesShowed\r\n            ? this.getWallObjects().forEach(element => this.objectManager.createWireframe(modifiedElevator, element))\r\n            : this.getWireframesObjects().forEach((element: THREE.Object3D) => element.parent.remove(element));\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(modifiedElevator));\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators(modifiedAllElevators));\r\n    }\r\n\r\n    public onWireframesColorChange(color: THREE.Color): void {\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetWireframesColor(color));\r\n\r\n        if (!this.selectedElevator) return;\r\n        const [modifiedElevator, modifiedAllElevators] = this.getModifiedElevators('color', color);\r\n        this.getWireframesObjects().forEach((element: THREE.Object3D) => (<any>element).material.color.set(color));\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(modifiedElevator));\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators(modifiedAllElevators));\r\n    }\r\n\r\n    private getWireframesObjects(): THREE.Object3D[] {\r\n        return this.getWallObjects().map(elem => elem.getObjectByName('wireframe'));\r\n    }\r\n\r\n    private getWallObjects(): Array<THREE.Mesh | THREE.Object3D> {\r\n        const elevatorSelf = this.elevatorObject.getObjectByName('elevatorSelf');\r\n        const walls = elevatorSelf.children.filter(element => element.name === 'wall');\r\n\r\n        walls.push(elevatorSelf.children.find(element => element.name === 'floor'));\r\n        walls.push(elevatorSelf.children.find(element => element.name === 'ceiling'));\r\n        walls.push(elevatorSelf.children.find(element => element.name === 'door-right'));\r\n        walls.push(elevatorSelf.children.find(element => element.name === 'door-left'));\r\n\r\n        return walls;\r\n    }\r\n\r\n    private getModifiedElevators(property: string, value: any): [Elevator, Elevator[]] {\r\n        const modifiedElevator = {\r\n            ...this.selectedElevator,\r\n            wireframes: {\r\n                ...this.selectedElevator.wireframes,\r\n                [property]: value\r\n            }\r\n        } as Elevator;\r\n        const idx = this.allElevators.findIndex(item => modifiedElevator.id === item.id);\r\n        const modifiedAllElevators = [...this.allElevators];\r\n        modifiedAllElevators[idx] = modifiedElevator;\r\n\r\n        return [modifiedElevator, modifiedAllElevators];\r\n    }\r\n}\r\n","<kendo-panelbar (stateChange)=\"onWireframesSettingsExpanded($event)\">\r\n    <kendo-panelbar-item title=\"\"\r\n        [expanded]=\"wireframesSettingsExpanded\">\r\n        <ng-template kendoPanelBarItemTitle>\r\n            <div class=\"component-title-wrapper\">\r\n                <span class=\"component-title\">Show wireframes</span>\r\n                <kendo-switch class=\"component-switch\"\r\n                    [(ngModel)]=\"isWireframesShowed\"\r\n                    (click)=\"onShowWireframeChange($event)\">\r\n                </kendo-switch>\r\n            </div>\r\n        </ng-template>\r\n        <ng-template kendoPanelBarContent>\r\n            <section class=\"option-line\">\r\n                <span>Wireframes color:</span>\r\n                <div>\r\n                    <kendo-colorpicker [value]=\"selectedElevator?.wireframes?.color || wireframesColor\"\r\n                        [format]=\"'hex'\"\r\n                        [gradientSettings]=\"{opacity: false}\"\r\n                        (valueChange)=\"onWireframesColorChange($event)\">\r\n                    </kendo-colorpicker>\r\n                </div>\r\n            </section>\r\n        </ng-template>\r\n    </kendo-panelbar-item>\r\n</kendo-panelbar>\r\n","import {\r\n    Component,\r\n    OnInit\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'app/redux/root-interface';\r\nimport GeneralSettingsActions from '../../../redux/general-settings/general-settings.actions';\r\n\r\n@Component({\r\n    selector: 'controls-settings',\r\n    templateUrl: './controls-settings.component.html',\r\n    styleUrls: ['./controls-settings.component.less']\r\n})\r\nexport class ControlsSettingsComponent implements OnInit {\r\n    public controlsSettingsExpanded: boolean;\r\n    public enableDamping: boolean;\r\n    public dampingFactor: number;\r\n    public cameraMinDistance: number;\r\n    public cameraMaxDistance: number;\r\n\r\n    private tooltipPosition: string = 'right';\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    constructor(private store: Store<AppState>) {}\r\n\r\n    public ngOnInit(): void {\r\n        this.subscriptions.push(\r\n            this.store.select(state => state.settingsPanel.formPosition)\r\n                .subscribe(position => this.tooltipPosition = position),\r\n            this.store.select(state => state.generalSettings.controls.controlsSettingsExpanded)\r\n                .subscribe(enable => this.controlsSettingsExpanded = enable),\r\n            this.store.select(state => state.generalSettings.controls.enableDamping)\r\n                .subscribe(enable => this.enableDamping = enable),\r\n            this.store.select(state => state.generalSettings.controls.dampingFactor)\r\n                .subscribe(factor => this.dampingFactor = factor),\r\n            this.store.select(state => state.generalSettings.controls.cameraMinDistance)\r\n                .subscribe(distance => this.cameraMinDistance = distance),\r\n            this.store.select(state => state.generalSettings.controls.cameraMaxDistance)\r\n                .subscribe(distance => this.cameraMaxDistance = distance),\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public getTooltipPosition(): string {\r\n        return this.tooltipPosition === 'left' ? 'right' : 'top';\r\n    }\r\n\r\n    public onControlsSettingsExpanded(event: Event): void {\r\n        this.store.dispatch(new GeneralSettingsActions.SetControlsSettingsExpand(event[0].expanded));\r\n    }\r\n\r\n    public onDumpingEnableChange(): void {\r\n        this.store.dispatch(new GeneralSettingsActions.SetControlsDumping(this.enableDamping));\r\n    }\r\n\r\n    public onDampingFactorReset(): void {\r\n        this.store.dispatch(new GeneralSettingsActions.ResetControlsDumpingFactor());\r\n    }\r\n\r\n    public onDampingFactorChange(): void {\r\n        if (this.dampingFactor === null) this.dampingFactor = 0.01;\r\n        this.store.dispatch(new GeneralSettingsActions.SetControlsDumpingFactor(this.dampingFactor));\r\n    }\r\n\r\n    public onCameraMinDistanceChange(): void {\r\n        if (this.cameraMinDistance === null) this.cameraMinDistance = 0;\r\n        if (this.cameraMinDistance >= this.cameraMaxDistance) {\r\n            this.cameraMaxDistance = this.cameraMinDistance;\r\n            this.onCameraMaxDistanceChange();\r\n        }\r\n        this.store.dispatch(new GeneralSettingsActions.SetControlsCameraMinDistance(this.cameraMinDistance));\r\n    }\r\n\r\n    public onCameraMaxDistanceChange(): void {\r\n        if (this.cameraMaxDistance === null) this.cameraMaxDistance = 500;\r\n        if (this.cameraMaxDistance < this.cameraMinDistance) {\r\n            this.cameraMinDistance = this.cameraMaxDistance;\r\n            this.onCameraMinDistanceChange();\r\n        }\r\n        this.store.dispatch(new GeneralSettingsActions.SetControlsCameraMaxDistance(this.cameraMaxDistance));\r\n    }\r\n}\r\n","<kendo-panelbar (stateChange)=\"onControlsSettingsExpanded($event)\">\r\n    <kendo-panelbar-item title=\"Controls settings\"\r\n        [expanded]=\"controlsSettingsExpanded\">\r\n        <ng-template kendoPanelBarContent>\r\n            <section class=\"option-line\">\r\n                <span>Enable Damping:</span>\r\n                <kendo-switch\r\n                    class=\"component-switch\"\r\n                    [(ngModel)]=\"enableDamping\"\r\n                    (click)=\"onDumpingEnableChange()\">\r\n                </kendo-switch>\r\n            </section>\r\n            <section class=\"option-line\">\r\n                <span>Dumping factor:</span>\r\n                <div>\r\n                    <kendo-numerictextbox class=\"numerictext-component\"\r\n                        [value]=\"dampingFactor\"\r\n                        [min]=\"0.001\"\r\n                        [max]=\"1\"\r\n                        [step]=\"0.01\"\r\n                        [decimals]=\"3\"\r\n                        [format]=\"'n2'\"\r\n                        [autoCorrect]=\"true\"\r\n                        [disabled]=\"!enableDamping\"\r\n                        [(ngModel)]=\"dampingFactor\"\r\n                        (valueChange)=\"onDampingFactorChange()\">\r\n                    </kendo-numerictextbox>\r\n                    <button kendoButton\r\n                        kendoTooltip\r\n                        title=\"Default factor\"\r\n                        iconClass=\"k-icon k-i-reset-color\"\r\n                        [position]=\"getTooltipPosition()\"\r\n                        [disabled]=\"!enableDamping\"\r\n                        (click)=\"onDampingFactorReset()\">\r\n                    </button>\r\n                </div>\r\n            </section>\r\n            <section class=\"option-line\">\r\n                <span>Camera distance(min/max):</span>\r\n                <div>\r\n                    <kendo-numerictextbox class=\"numerictext-component\"\r\n                        [value]=\"cameraMinDistance\"\r\n                        [min]=\"0\"\r\n                        [max]=\"50000\"\r\n                        [step]=\"25\"\r\n                        [decimals]=\"0\"\r\n                        [format]=\"'n0'\"\r\n                        [autoCorrect]=\"true\"\r\n                        [(ngModel)]=\"cameraMinDistance\"\r\n                        (valueChange)=\"onCameraMinDistanceChange()\">\r\n                    </kendo-numerictextbox>\r\n                    <kendo-numerictextbox class=\"numerictext-component\"\r\n                        [value]=\"cameraMaxDistance\"\r\n                        [min]=\"1\"\r\n                        [max]=\"50000\"\r\n                        [step]=\"25\"\r\n                        [decimals]=\"0\"\r\n                        [format]=\"'n0'\"\r\n                        [autoCorrect]=\"true\"\r\n                        [(ngModel)]=\"cameraMaxDistance\"\r\n                        (valueChange)=\"onCameraMaxDistanceChange()\">\r\n                    </kendo-numerictextbox>\r\n                </div>\r\n            </section>\r\n        </ng-template>\r\n    </kendo-panelbar-item>\r\n</kendo-panelbar>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppState } from 'app/redux/root-interface';\r\nimport GeneralSettingsActions from '../../redux/general-settings/general-settings.actions';\r\nimport CameraSettingsActions from 'app/redux/camera-settings/camera-settings.actions';\r\nimport { CameraSettings } from 'app/redux/camera-settings/camera-settings.model';\r\nimport cameraSettings from 'app/constants/camera-settings.constants';\r\nimport { EngineService } from 'app/services/engine.service';\r\n\r\n@Component({\r\n    selector: 'general-settings',\r\n    templateUrl: './general-settings.component.html',\r\n    styleUrls: ['./general-settings.component.less']\r\n})\r\nexport class GeneralSettingsComponent implements OnInit, OnDestroy {\r\n    private subscriptions: Subscription[] = [];\r\n    private cameraSettings: CameraSettings = { ...cameraSettings };\r\n\r\n    public backgroundColor: string;\r\n    public tooltipPosition: string = 'right';\r\n\r\n    constructor(private store: Store<AppState>, private engServ: EngineService) {}\r\n\r\n    public ngOnInit(): void {\r\n        this.subscriptions.push(\r\n            this.store\r\n                .select(state => state.settingsPanel.formPosition)\r\n                .subscribe(position => this.tooltipPosition = position),\r\n            this.store\r\n                .select(state => state.generalSettings.backgroundColor)\r\n                .subscribe(backgroundColor => this.backgroundColor = backgroundColor),\r\n            this.store\r\n                .select(state => state.cameraSettings.cameraPosition)\r\n                .subscribe(cameraPosition => this.cameraSettings.cameraPosition = cameraPosition),\r\n            this.store\r\n                .select(state => state.cameraSettings.controlsTarget)\r\n                .subscribe(controlsTarget => this.cameraSettings.controlsTarget = controlsTarget)\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public getTooltipPosition(): string {\r\n        return this.tooltipPosition === 'left' ? 'right' : 'top';\r\n    }\r\n\r\n    public onBackgroundColorChange(color: string): void {\r\n        this.store.dispatch(new GeneralSettingsActions.SetBackgroundColor(color));\r\n    }\r\n\r\n    public onBackgroundColorReset(): void {\r\n        this.store.dispatch(new GeneralSettingsActions.ResetBackgroundColor());\r\n    }\r\n\r\n    public onResetAllSettings(): void {\r\n        this.store.dispatch(new GeneralSettingsActions.ResetAllSettings());\r\n        this.store.dispatch(new CameraSettingsActions.ResetCameraPosition());\r\n        this.store.dispatch(new CameraSettingsActions.ResetControlsTarget());\r\n        this.engServ.setInitialCameraPosition(this.cameraSettings);\r\n    }\r\n}\r\n","<h2 class=\"option-title\">General Settings</h2>\r\n<section class=\"option-line\">\r\n    <span>Background color:</span>\r\n    <div>\r\n        <kendo-colorpicker [value]=\"backgroundColor\"\r\n            [format]=\"'hex'\"\r\n            [gradientSettings]=\"{opacity: false}\"\r\n            (valueChange)=\"onBackgroundColorChange($event)\">\r\n        </kendo-colorpicker>\r\n        <button kendoButton\r\n            kendoTooltip\r\n            title=\"Default color\"\r\n            iconClass=\"k-icon k-i-reset-color\"\r\n            [position]=\"getTooltipPosition()\"\r\n            (click)=\"onBackgroundColorReset()\">\r\n        </button>\r\n    </div>\r\n</section>\r\n<grid-settings></grid-settings>\r\n<controls-settings></controls-settings>\r\n<renderer-settings></renderer-settings>\r\n<section class=\"option-line\">\r\n    <span>Reset tab settings:</span>\r\n    <button kendoButton\r\n        kendoTooltip\r\n        title=\"Reset tab settings\"\r\n        iconClass=\"k-icon k-i-reload\"\r\n        [position]=\"getTooltipPosition()\"\r\n        (click)=\"onResetAllSettings()\">\r\n    </button>\r\n</section>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'app/redux/root-interface';\r\nimport GeneralSettingsActions from '../../../redux/general-settings/general-settings.actions';\r\nimport generalSettings from 'app/constants/general-settings.constants';\r\nimport { GridSizeModel } from 'app/shared/grid-size.model';\r\n\r\n@Component({\r\n    selector: 'grid-settings',\r\n    templateUrl: './grid-settings.component.html',\r\n    styleUrls: ['./grid-settings.component.less']\r\n})\r\nexport class GridSettingsComponent implements OnInit, OnDestroy {\r\n    public gridColor: THREE.Color;\r\n    public tooltipPosition: string = 'right';\r\n    public gridSettingsExpanded: boolean;\r\n    public gridEnable: boolean;\r\n    public gridOpacity: number;\r\n    public gridSize: GridSizeModel;\r\n\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    constructor(private store: Store<AppState>) {}\r\n\r\n    public ngOnInit(): void {\r\n        this.subscriptions.push(\r\n            this.store.select(state => state.settingsPanel.formPosition).subscribe(position => this.tooltipPosition = position),\r\n            this.store.select(state => state.generalSettings.grid.gridColor).subscribe(gridColor => this.gridColor = gridColor),\r\n            this.store.select(state => state.generalSettings.grid.gridSettingsExpanded).subscribe(expanded => this.gridSettingsExpanded = expanded),\r\n            this.store.select(state => state.generalSettings.grid.gridEnable).subscribe(enable => this.gridEnable = enable),\r\n            this.store.select(state => state.generalSettings.grid.gridOpacity).subscribe(opacity => this.gridOpacity = opacity),\r\n            this.store\r\n                .select(state => state.generalSettings.grid.gridSize)\r\n                .subscribe(size => {\r\n                    // avoid mutaion the original constant\r\n                    this.gridSize = Object.assign({}, size);\r\n                })\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public getTooltipPosition(): string {\r\n        return this.tooltipPosition === 'left' ? 'right' : 'top';\r\n    }\r\n\r\n    public onGridColorChange(color: string): void {\r\n        this.store.dispatch(new GeneralSettingsActions.SetGridColor(color));\r\n    }\r\n\r\n    public onGridColorReset(): void {\r\n        this.store.dispatch(new GeneralSettingsActions.ResetGridColor());\r\n    }\r\n\r\n    public onChangeSwitch(event: Event): void {\r\n        event.stopPropagation();\r\n        this.store.dispatch(new GeneralSettingsActions.SetGridEnable(this.gridEnable));\r\n    }\r\n\r\n    public onGridSettingsExpanded(event: Event): void {\r\n        this.store.dispatch(new GeneralSettingsActions.SetGridSettingsExpand(event[0].expanded));\r\n    }\r\n\r\n    public onOpacityChange(opacity: number): void {\r\n        if (opacity === null) this.store.dispatch(new GeneralSettingsActions.SetGridOpacity(generalSettings.grid.gridOpacity));\r\n        else this.store.dispatch(new GeneralSettingsActions.SetGridOpacity(opacity));\r\n    }\r\n\r\n    public onGridSizeChange(): void {\r\n        const defaultValue = 5;\r\n        for (let key in this.gridSize) {\r\n            if (this.gridSize[key] === null) this.gridSize[key] = defaultValue;\r\n        }\r\n        this.store.dispatch(new GeneralSettingsActions.SetGridSize(this.gridSize));\r\n    }\r\n\r\n    public onGridSizeReset(): void {\r\n        this.store.dispatch(new GeneralSettingsActions.ResetGridSize());\r\n    }\r\n}\r\n","<kendo-panelbar (stateChange)=\"onGridSettingsExpanded($event)\">\n    <kendo-panelbar-item title=\"\"\n        [expanded]=\"gridSettingsExpanded\">\n        <ng-template kendoPanelBarItemTitle>\n            <div class=\"component-title-wrapper\">\n                <span class=\"component-title\">Show Grid</span>\n                <kendo-switch class=\"component-switch\"\n                    [(ngModel)]=\"gridEnable\"\n                    (click)=\"onChangeSwitch($event)\">\n                </kendo-switch>\n            </div>\n        </ng-template>\n        <ng-template kendoPanelBarContent>\n            <section class=\"option-line\">\n                <span>Grid options(size/division):</span>\n                <div>\n                    <kendo-numerictextbox class=\"numerictext-component\"\n                        [value]=\"gridSize?.size\"\n                        [min]=\"1\"\n                        [step]=\"5\"\n                        [disabled]=\"!gridEnable\"\n                        [decimals]=\"0\"\n                        [format]=\"'n0'\"\n                        [autoCorrect]=\"true\"\n                        [(ngModel)]=\"gridSize.size\"\n                        (valueChange)=\"onGridSizeChange()\">\n                    </kendo-numerictextbox>\n                    <kendo-numerictextbox class=\"numerictext-component\"\n                        [value]=\"gridSize?.division\"\n                        [min]=\"1\"\n                        [max]=\"5000\"\n                        [step]=\"1\"\n                        [disabled]=\"!gridEnable\"\n                        [decimals]=\"0\"\n                        [format]=\"'n0'\"\n                        [autoCorrect]=\"true\"\n                        [(ngModel)]=\"gridSize.division\"\n                        (valueChange)=\"onGridSizeChange()\">\n                    </kendo-numerictextbox>\n                    <button kendoButton\n                        kendoTooltip\n                        title=\"Default size\"\n                        iconClass=\"k-icon k-i-reset-color\"\n                        [disabled]=\"!gridEnable\"\n                        [position]=\"getTooltipPosition()\"\n                        (click)=\"onGridSizeReset()\">\n                    </button>\n                </div>\n            </section>\n            <section class=\"option-line\">\n                <span>Grid color:</span>\n                <div>\n                    <kendo-colorpicker [value]=\"gridColor\"\n                        [format]=\"'hex'\"\n                        [disabled]=\"!gridEnable\"\n                        [gradientSettings]=\"{opacity: false}\"\n                        (valueChange)=\"onGridColorChange($event)\">\n                    </kendo-colorpicker>\n                    <button kendoButton\n                        kendoTooltip\n                        title=\"Default color\"\n                        iconClass=\"k-icon k-i-reset-color\"\n                        [position]=\"getTooltipPosition()\"\n                        [disabled]=\"!gridEnable\"\n                        (click)=\"onGridColorReset()\">\n                    </button>\n                </div>\n            </section>\n            <section class=\"option-line\">\n                <span>Grid opacity:</span>\n                <kendo-numerictextbox class=\"numerictext-component\"\n                    [value]=\"gridOpacity\"\n                    [min]=\"0.00\"\n                    [max]=\"1.00\"\n                    [step]=\"0.05\"\n                    [disabled]=\"!gridEnable\"\n                    [autoCorrect]=\"true\"\n                    (valueChange)=\"onOpacityChange($event)\">\n                </kendo-numerictextbox>\n            </section>\n        </ng-template>\n    </kendo-panelbar-item>\n</kendo-panelbar>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { AppState } from 'app/redux/root-interface';\r\nimport GeneralSettingsActions from '../../../redux/general-settings/general-settings.actions';\r\n\r\n@Component({\r\n    selector: 'renderer-settings',\r\n    templateUrl: './renderer-settings.component.html',\r\n    styleUrls: ['./renderer-settings.component.less']\r\n})\r\nexport class RendererSettingsComponent implements OnInit {\r\n    public attentionText: string = 'Reload required';\r\n    public rendererSettingsExpanded: boolean;\r\n    public rendererAntialias: boolean;\r\n    public rendererAlpha: boolean;\r\n\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    constructor(private store: Store<AppState>) {}\r\n\r\n    public ngOnInit() {\r\n        this.subscriptions.push(\r\n            this.store.select(state => state.generalSettings.renderer.rendererSettingsExpanded)\r\n                .subscribe(expanded => this.rendererSettingsExpanded = expanded),\r\n            this.store.select(state => state.generalSettings.renderer.rendererAlpha)\r\n                .subscribe(alpha => this.rendererAlpha = alpha),\r\n            this.store.select(state => state.generalSettings.renderer.rendererAntialias)\r\n                .subscribe(antialias => this.rendererAntialias = antialias),\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public onRendererSettingsExpanded(event: Event): void {\r\n        this.store.dispatch(new GeneralSettingsActions.SetRendererExpand(event[0].expanded));\r\n    }\r\n\r\n    public onAlphaSwitch(): void {\r\n        this.store.dispatch(new GeneralSettingsActions.SetRendererAlpha(this.rendererAlpha));\r\n    }\r\n\r\n    public onAntialiasSwitch(): void {\r\n        this.store.dispatch(new GeneralSettingsActions.SetRendererAntialias(this.rendererAntialias));\r\n    }\r\n}\r\n","<kendo-panelbar (stateChange)=\"onRendererSettingsExpanded($event)\">\n    <kendo-panelbar-item title=\"Renderer settings\"\n        [expanded]=\"rendererSettingsExpanded\">\n        <ng-template kendoPanelBarContent>\n            <section class=\"option-line\">\n                <span>Alpha channel:</span>\n                <div class=\"option-line__attention-block\">\n                    <attention-sign kendoTooltip\n                        *ngIf=\"!alphaEl?.control?.control.pristine\" \n                        [title]=\"attentionText\">\n                    </attention-sign>\n                    <kendo-switch #alphaEl \n                        class=\"component-switch\"\n                        [(ngModel)]=\"rendererAlpha\"\n                        (click)=\"onAlphaSwitch()\">\n                    </kendo-switch>\n                </div>\n            </section>\n            <section class=\"option-line\">\n                <span>Antialias:</span>\n                <div class=\"option-line__attention-block\">\n                    <attention-sign kendoTooltip\n                        *ngIf=\"!antialiasEl?.control?.control.pristine\" \n                        [title]=\"attentionText\">\n                    </attention-sign>\n                    <kendo-switch #antialiasEl\n                        class=\"component-switch\"\n                        [(ngModel)]=\"rendererAntialias\"\n                        (click)=\"onAntialiasSwitch()\">\n                    </kendo-switch>\n                </div>\n            </section>\n        </ng-template>\n    </kendo-panelbar-item>\n</kendo-panelbar>\n","import { Subscription } from 'rxjs';\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from 'app/redux/root-interface';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, QueryList, ViewChildren } from '@angular/core';\r\nimport Elevator from 'app/shared/classes/elevator.class';\r\nimport { NumericTextBoxComponent } from '@progress/kendo-angular-inputs';\r\nimport ElevatorManagerSettingsActions from 'app/redux/elevator-manager-settings/elevator-manager-settings.actions';\r\nimport Floor from 'app/shared/classes/floor.class';\r\nimport Passenger from 'app/shared/classes/passenger.class';\r\n\r\n@Component({\r\n    selector: 'passengers-manager',\r\n    templateUrl: './passengers-manager.component.html',\r\n    styleUrls: ['./passengers-manager.component.less']\r\n})\r\nexport class PassengersManagerComponent implements OnInit, OnDestroy {\r\n    private tooltipPosition: string = 'right';\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    public selectedElevator: Elevator;\r\n    public allElevators: Elevator[];\r\n\r\n    @ViewChildren(NumericTextBoxComponent)\r\n    public ntextboxes: QueryList<NumericTextBoxComponent>;\r\n\r\n    constructor(private store: Store<AppState>, private changeDetector: ChangeDetectorRef) {}\r\n\r\n    public ngOnInit(): void {\r\n        this.subscriptions.push(\r\n            this.store.select(state => state.settingsPanel.formPosition).subscribe(position => this.tooltipPosition = position),\r\n            this.store.select(state => state.elevatorManagerSettings.elevators).subscribe(elevators => this.allElevators = elevators),\r\n            this.store\r\n                .select(state => state.elevatorManagerSettings.selectedElevator)\r\n                .subscribe(elevator => {\r\n                    this.selectedElevator = elevator;\r\n                    this.changeDetector.markForCheck(); // yes, this needed\r\n                })\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public getTooltipPosition(): string {\r\n        return this.tooltipPosition === 'left' ? 'right' : 'top';\r\n    }\r\n\r\n    public onClearPassengers(floorNumber: number): void {\r\n        const selectedElevator = { ...this.selectedElevator, supportedFloors: [...this.selectedElevator.supportedFloors] };\r\n        const idx = this.allElevators.findIndex(elevator => elevator.id === selectedElevator.id);\r\n        const allElevators = [...this.allElevators];\r\n\r\n        selectedElevator.supportedFloors[floorNumber] = new Floor([]);\r\n        allElevators[idx] = selectedElevator;\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(selectedElevator));\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators(allElevators));\r\n    }\r\n\r\n    public onAddPassenger(floorNumber: number): void {\r\n        const selectedElevator = { ...this.selectedElevator, supportedFloors: [...this.selectedElevator.supportedFloors] };\r\n        const { passengers } = selectedElevator.supportedFloors[floorNumber];\r\n        const idx = this.allElevators.findIndex(elevator => elevator.id === selectedElevator.id);\r\n        const allElevators = [...this.allElevators];\r\n\r\n        selectedElevator.supportedFloors[floorNumber] = new Floor([...passengers, new Passenger(floorNumber, this.getRandomNumber(floorNumber))]);\r\n        allElevators[idx] = selectedElevator;\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(selectedElevator));\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators(allElevators));\r\n    }\r\n\r\n    public onRemovePassenger(floorNumber: number, passengerIndex: number): void {\r\n        const selectedElevator = { ...this.selectedElevator, supportedFloors: [...this.selectedElevator.supportedFloors] };\r\n        const passengers = [...selectedElevator.supportedFloors[floorNumber].passengers];\r\n        const idx = this.allElevators.findIndex(elevator => elevator.id === selectedElevator.id);\r\n        const allElevators = [...this.allElevators];\r\n\r\n        passengers.splice(passengerIndex, 1);\r\n        allElevators[idx] = selectedElevator;\r\n        selectedElevator.supportedFloors[floorNumber] = new Floor(passengers);\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(selectedElevator));\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators(allElevators));\r\n    }\r\n\r\n    public onChangeDestinationFloor(ntextbox: NumericTextBoxComponent, newDestination: number, floorNumber: number, passengerIndex: number): void {\r\n        const selectedElevator = { ...this.selectedElevator, supportedFloors: [...this.selectedElevator.supportedFloors] };\r\n        const passengers = [...selectedElevator.supportedFloors[floorNumber].passengers];\r\n        const idx = this.allElevators.findIndex(elevator => elevator.id === selectedElevator.id);\r\n        const allElevators = [...this.allElevators];\r\n\r\n        passengers[passengerIndex] = new Passenger(floorNumber, newDestination);\r\n        selectedElevator.supportedFloors[floorNumber] = new Floor(passengers);\r\n        allElevators[idx] = selectedElevator;\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(selectedElevator));\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators(allElevators));\r\n        this.focusNumbericTextbox(ntextbox);\r\n    }\r\n\r\n    public onClearAllFloors(): void {\r\n        const selectedElevator = { ...this.selectedElevator, supportedFloors: [...this.selectedElevator.supportedFloors] };\r\n        const idx = this.allElevators.findIndex(elevator => elevator.id === selectedElevator.id);\r\n        const allElevators = [...this.allElevators];\r\n\r\n        selectedElevator.supportedFloors = Array.from({ length: selectedElevator.coveredFloors }).fill(new Floor()) as Floor[];\r\n        allElevators[idx] = selectedElevator;\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetSelectedElevator(selectedElevator));\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators(allElevators));\r\n    }\r\n\r\n    public trackByMethod(index: number): number {\r\n        return index;\r\n    }\r\n\r\n    private getRandomNumber(notEqualNumber: number): number {\r\n        const number = Math.floor(Math.random() * this.selectedElevator.coveredFloors);\r\n\r\n        return number === notEqualNumber ? this.getRandomNumber(notEqualNumber) : number;\r\n    }\r\n\r\n    private focusNumbericTextbox(ntextbox: NumericTextBoxComponent): void {\r\n        const idx = this.ntextboxes.toArray().findIndex(control => control === ntextbox);\r\n        // because of recreation\r\n        setTimeout(() => this.ntextboxes.toArray()[idx].focus());\r\n    }\r\n}\r\n","<h2 class=\"option-title\">\r\n    <button kendoButton\r\n        kendoTooltip\r\n        title=\"Clear all floors\"\r\n        iconClass=\"k-icon k-i-cancel\"\r\n        [position]=\"getTooltipPosition()\"\r\n        (click)=\"onClearAllFloors()\">\r\n    </button>\r\n    Passengers manager\r\n</h2>\r\n<div *ngIf=\"selectedElevator; else emptyTemplate\"\r\n    class=\"passengers-manager\">\r\n    <div *ngFor=\"let floor of selectedElevator.supportedFloors; trackBy: trackByMethod; let floorNumber = index;\"\r\n        class=\"floor-container\">\r\n        <div>Floor {{floorNumber}}</div>\r\n        <div class=\"passengers-container\">\r\n            <button kendoButton\r\n                kendoTooltip\r\n                class=\"button--small\"\r\n                title=\"Clear the floor\"\r\n                iconClass=\"k-icon k-i-cancel\"\r\n                [position]=\"getTooltipPosition()\"\r\n                (click)=\"onClearPassengers(floorNumber)\">\r\n            </button>\r\n            <button kendoButton\r\n                kendoTooltip\r\n                class=\"button--small\"\r\n                title=\"Add a passenger\"\r\n                iconClass=\"k-icon k-i-plus\"\r\n                [position]=\"getTooltipPosition()\"\r\n                (click)=\"onAddPassenger(floorNumber)\">\r\n            </button>\r\n            <span *ngFor=\"let passenger of floor.passengers; trackBy: trackByMethod; let passengerIndex = index; let isLastPassenger = last;\">\r\n                <button kendoButton\r\n                    kendoTooltip\r\n                    class=\"button--small--shifted\"\r\n                    title=\"Remove the passenger\"\r\n                    iconClass=\"k-icon k-i-minus\"\r\n                    [disabled]=\"!selectedElevator\"\r\n                    [position]=\"getTooltipPosition()\"\r\n                    (click)=\"onRemovePassenger(floorNumber, passengerIndex)\">\r\n                </button>\r\n                <kendo-numerictextbox #ntextbox\r\n                    kendoTooltip\r\n                    class=\"numerictext-component\"\r\n                    rounded=\"small\"\r\n                    min=\"0\"\r\n                    [title]=\"'Index: ' + passengerIndex\"\r\n                    [position]=\"getTooltipPosition()\"\r\n                    [value]=\"passenger.destinationFloor\"\r\n                    [max]=\"selectedElevator.coveredFloors - 1\"\r\n                    [step]=\"1\"\r\n                    [spinners]=\"false\"\r\n                    [decimals]=\"0\"\r\n                    [format]=\"'n0'\"\r\n                    [autoCorrect]=\"true\"\r\n                    (valueChange)=\"onChangeDestinationFloor(ntextbox, $event, floorNumber, passengerIndex)\">\r\n                </kendo-numerictextbox>\r\n                <span *ngIf=\"!isLastPassenger\">,</span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #emptyTemplate>\r\n    <span>Choose an elevator, first!</span>\r\n</ng-template>\r\n\r\n\r\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'settings-panel',\n    templateUrl: './settings-panel.component.html',\n    styleUrls: ['./settings-panel.component.less'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SettingsPanelComponent {\n    @Input()\n    public selectedOption: string;\n\n    constructor() {}\n}\n","<div *ngIf=\"selectedOption === 'GlobalSettings'\">\r\n    <general-settings></general-settings>\r\n</div>\r\n<div id=\"Passangers\" *ngIf=\"selectedOption === 'Passangers'\">\r\n    <passengers-manager></passengers-manager>\r\n</div>\r\n<div id=\"ElevatorsManager\" *ngIf=\"selectedOption === 'ElevatorsManager'\">\r\n    <elevators-manager></elevators-manager>\r\n</div>\r\n<div id=\"SmartDumbManager\" *ngIf=\"selectedOption === 'SmartDumbManager'\">\r\n    <smart-dumb-manager></smart-dumb-manager>\r\n</div>\r\n<div id=\"Favourites\" *ngIf=\"selectedOption === 'Favourites'\">\r\n    <ul>\r\n        <li>70% Discount!</li>\r\n        <li>90% Discount!</li>\r\n        <li>One time offer!</li>\r\n    </ul>\r\n</div>","import { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ListBoxToolbarConfig } from '@progress/kendo-angular-listbox';\r\nimport { AppState } from 'app/redux/root-interface';\r\nimport Elevator from 'app/shared/classes/elevator.class';\r\nimport { ObjectManagerService } from 'app/services/object-manager.service';\r\nimport ElevatorManagerSettingsActions from 'app/redux/elevator-manager-settings/elevator-manager-settings.actions';\r\n\r\n@Component({\r\n    selector: 'smart-dumb-manager',\r\n    templateUrl: './smart-dumb-manager.component.html',\r\n    styleUrls: ['./smart-dumb-manager.component.less']\r\n})\r\nexport class SmartDumbManagerComponent implements OnInit, OnDestroy {\r\n    private subscriptions: Subscription[] = [];\r\n\r\n    public allElevators: Elevator[];\r\n    public dumbElevators: string[] = [];\r\n    public smartElevators: string[] = [];\r\n    public toolbarSettings: ListBoxToolbarConfig = { tools: ['transferTo', 'transferFrom'] };\r\n\r\n    constructor(private store: Store<AppState>, private objectManager: ObjectManagerService, private changeDetector: ChangeDetectorRef) {}\r\n\r\n    public ngOnInit(): void {\r\n        this.subscriptions.push(\r\n            this.store\r\n                .select(state => state.elevatorManagerSettings.elevators)\r\n                .pipe(debounceTime(50))\r\n                .subscribe(elevators => this.setSmartDumbElevators(elevators))\r\n        );\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        this.subscriptions.forEach(sub => sub.unsubscribe());\r\n    }\r\n\r\n    public onChangeElevatorType(): void {\r\n        const allElevators = [...this.allElevators];\r\n        const updatedElevators = allElevators.map(elevator => {\r\n            const { name } = this.objectManager.getObjectById(elevator.id);\r\n            if (this.dumbElevators.includes(name)) {\r\n                return { ...elevator, isSmart: false };\r\n            } else {\r\n                return { ...elevator, isSmart: true };\r\n            }\r\n        });\r\n\r\n        this.store.dispatch(new ElevatorManagerSettingsActions.SetAllElevators(updatedElevators));\r\n    }\r\n\r\n    private setSmartDumbElevators(elevators: Elevator[]): void {\r\n        this.allElevators = elevators;\r\n        const smartElevators = elevators.filter(elevator => elevator.isSmart);\r\n        const dumbElevators = elevators.filter(elevator => !elevator.isSmart);\r\n\r\n        this.smartElevators = smartElevators.reduce((acc, elevator) => {\r\n            acc.push(this.objectManager.getObjectById(elevator.id).name);\r\n            return acc;\r\n        }, []);\r\n        this.dumbElevators = dumbElevators.reduce((acc, elevator) => {\r\n            acc.push(this.objectManager.getObjectById(elevator.id).name);\r\n            return acc;\r\n        }, []);\r\n        this.changeDetector.detectChanges();\r\n    }\r\n}\r\n","<h2 class=\"option-title\">Smart Dumb Manager</h2>\r\n<div class=\"column-names\">\r\n    <span>Dumb</span>\r\n    <span>Smart</span>\r\n</div>\r\n<section class=\"option-line\">\r\n    <kendo-listbox kendoListBoxDataBinding\r\n        class=\"kendo-listbox--large\"\r\n        [data]=\"dumbElevators\"\r\n        [toolbar]=\"toolbarSettings\"\r\n        [connectedWith]=\"asia\"\r\n        (actionClick)=\"onChangeElevatorType()\">\r\n    </kendo-listbox>\r\n    <kendo-listbox #asia\r\n        [data]=\"smartElevators\"\r\n        [toolbar]=\"false\">\r\n    </kendo-listbox>\r\n</section>","import * as THREE from 'three';\r\nimport elevatorManagerSettings from 'app/constants/elevator-manager-settings.constants';\r\nimport { IElevator } from '../Elevator/elevator.model';\r\nimport { IWireframes } from '../Elevator/childs/wireframes.model';\r\nimport { ISize } from '../Elevator/childs/size.model';\r\nimport { IEsteticWall } from '../Elevator/childs/estetic-wall.model';\r\nimport { ITechProps } from '../Elevator/childs/tech-props.model';\r\nimport Floor from './floor.class';\r\n\r\nexport default class Elevator implements IEsteticWall, ITechProps, ISize {\r\n    public wallColor: THREE.Color;\r\n    public wallOpacity: number;\r\n    public wallTransparent: boolean;\r\n    public length: number;\r\n    public width: number;\r\n    public height: number;\r\n    public capacity: number;\r\n    public speed: number;\r\n    public coveredFloors: number;\r\n    public currentFloor: number;\r\n    public wireframes: IWireframes;\r\n    public id: number;\r\n    public name: string;\r\n    public supportedFloors: Floor[];\r\n    public isSmart: boolean = false;\r\n    public isGoingUp: boolean = false;\r\n    public isGoingDown: boolean = false;\r\n\r\n    constructor(config: IElevator) {\r\n        this.wallColor = config.wallColor;\r\n        this.wallOpacity = config.wallOpacity;\r\n        this.wallTransparent = config.wallTransparent;\r\n        this.length = elevatorManagerSettings.defaultElevator.length;\r\n        this.width = elevatorManagerSettings.defaultElevator.width;\r\n        this.height = elevatorManagerSettings.defaultElevator.height;\r\n        this.capacity = config.capacity;\r\n        this.speed = config.speed;\r\n        this.coveredFloors = config.coveredFloors;\r\n        this.currentFloor = config.currentFloor;\r\n        this.wireframes = config.wireframes;\r\n        this.supportedFloors = config.supportedFloors || (Array.from({ length: config.coveredFloors }).fill(new Floor()) as Floor[]);\r\n        this.isSmart = config.isSmart;\r\n    }\r\n}\r\n","import Passenger from './passenger.class';\r\n\r\nexport default class Floor {\r\n    public passengers: Passenger[] = [];\r\n\r\n    constructor(passengers: Passenger[] = []) {\r\n        this.passengers = passengers;\r\n    }\r\n}\r\n","export default class Passenger {\r\n    public destinationFloor: number;\r\n    public currentFloor: number;\r\n\r\n    constructor(currentFloor: number, destinationFloor: number) {\r\n        this.currentFloor = currentFloor;\r\n        this.destinationFloor = destinationFloor;\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}